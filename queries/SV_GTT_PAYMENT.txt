-- ATNI_DEV.GTT_REPORTING.SV_GTT_PAYMENT source

create or replace view SV_GTT_PAYMENT(
	OPERATING_COMPANY_CODE COMMENT 'The operating company code defined by Scorecard(1-GTT)',
	OPERATING_COMPANY_NAME COMMENT 'The operating company name',
	DATESTART_MONTH_ENDING COMMENT 'Month end date',
	DATESTART COMMENT 'Reporting snaphot date. Date event or transaction occurred',
	PAYMENT_TIMESTAMP COMMENT 'Date and time payment was done',
	INVOICE_NUMBER COMMENT 'Bill invoice reference number',
	ACCOUNTNUMBER COMMENT 'The billed accountnumber',
	SUBSCR_NO COMMENT 'The billed Subscriber',
	BID COMMENT 'The phone number of the billed subscriber',
	FIRSTNAME COMMENT 'The firstname of the billed account',
	LASTNAME COMMENT 'The lastname of the billed acccount',
	COMPANY COMMENT 'The company name of the billed account',
	CUSTOMER_EMAIL COMMENT 'Contact email on the account',
	CONTACT1_NAME COMMENT 'Name of Contact',
	CONTACT2_NAME COMMENT 'Name of Contact',
	CONTACT1_PHONE COMMENT 'Phone of Contact',
	CONTACT2_PHONE COMMENT 'Phone of Contact',
	DATEIN COMMENT 'Activation Date of the Subscriber',
	PAYMENT_AMOUNT_USD COMMENT 'Payment amount in USD',
	PAYMENT_AMOUNT_GYD COMMENT 'Payment amount in GYD',
	TOTAL_TAX_USD COMMENT 'Tax amount in USD',
	TOTAL_TAX_GYD COMMENT 'Tax amount in GYD',
	CONVERSION_RATE_GYD COMMENT 'Conversion rate used for USD',
	NUMBER_OF_PAYMENTS COMMENT 'Quantity of payments done',
	PAYMENT_TYPE_CODE COMMENT 'Code for payment type done',
	PAYMENT_TYPE_NAME COMMENT 'Payment type code name',
	PAYMENT_TYPE_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of payment type',
	PAYMENT_TYPE_CATGORY COMMENT 'Top level payment type hierarchy',
	PAYMENT_LOCATION_CODE COMMENT 'Code for location where payment was made',
	PAYMENT_LOCATION_NAME COMMENT 'Payment Location Code name',
	PAYMENT_LOCATION_LEAF_LEVEL_NAME COMMENT 'Lowest Level hierarchy of location type',
	PAYMENT_LOCATION_CATGORY COMMENT 'Top level hierarchy of payment location',
	PAYMENT_METHOD_CODE COMMENT 'Code of payment method used',
	PAYMENT_METHOD_NAME COMMENT 'Payment method code name',
	PAYMENT_METHOD_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of payment location type',
	PAYMENT_METHOD_CATGORY COMMENT 'Top level hierarchy of payment method',
	PAYMENT_CHANNEL_CODE COMMENT 'Code of payment channel used',
	PAYMENT_CHANNEL_NAME COMMENT 'Payment channel code name',
	PAYMENT_CHANNEL_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of payment location',
	PAYMENT_CHANNEL_CATGORY COMMENT 'Top Level hierarchy of payment channel type',
	SYSTEMID COMMENT 'Technology/system ID of subscriber primary rateplan',
	MONTH_ENDING_STATUS COMMENT 'Month ending ending active flag',
	UNIT_COUNTABLE COMMENT 'A subscriber that should be counted in the base. Usually distinguishes company from  non-company subscribers',
	REVENUE_COUNTABLE COMMENT 'A revenue generating subscriber. A subscriber with a revenue generating account, plan and bill type',
	OFFICIALLY_COUNTED_SUBSCRIBER COMMENT 'A subscriber that is both unit countable and revenue countable',
	BEGINNING_ACTIVE COMMENT 'Subscriber beginning the month active',
	ENDING_ACTIVE COMMENT 'Subscriber ending the month active',
	DEACTIVATIONS COMMENT 'Deactivations are counted both for the Deactivating Subscription and any attached Products.',
	REACTIVATIONS COMMENT 'Reactivations are Activations of previously deactivated Subscribers and any attached Features, within 90 days of the deactivation of the Subscriber. Reactivation types are based on the original deactivation type.',
	NET_DEACTIVATIONS COMMENT 'Net Deactivations = Deactivations - Reactivations.',
	ACTIVATIONS COMMENT 'New Activations + Negative Gross Activations + Feature Negative Gross Activations + Reactivations of NGA + Reactivations of Feature NGA',
	NET_ACTIVATIONS COMMENT 'The net change in active Subscriber/Features from the beginning to the end of a particular period.',
	NET_SUSPENDS COMMENT 'The net change in Suspended Subscriber/Features from the beginning to end of a particular period.',
	ENDING_SUSPEND COMMENT 'Subscriber ending the month in suspend state',
	ENDING_PENDING_DEACTIVATION COMMENT 'Active subscriber ending the month with a pending deactivation',
	ENDING_PENDING_ACTIVE COMMENT 'Subscriber ending the month pending',
	BEGINNING_PENDING_ACTIVE COMMENT 'Subscriber beginning the month pending',
	BEGINNING_PENDING_DEACTIVATION COMMENT 'Active subscriber beginning the month with a pending deactivation',
	BID_TENURE_IN_MONTHS COMMENT 'Tenure in months of the subscriber',
	AGGREGATION_IND COMMENT 'Multiply this by one of the subscriber status metrics to get the real count to avoid aggregating for every line item',
	PRODUCT_CODE COMMENT 'Product code',
	PRODUCT_NAME COMMENT 'Product description',
	PRODUCT_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of product',
	LINE_OF_SERVICE COMMENT 'First level hierarchy of product, e.g mobile, voice broadband',
	SUBLINE_OF_SERVICE COMMENT 'Second level hierarchy of product, e.g Mobile Postpaid, DSL',
	SUBLINE_OF_SERVICE_SEGMENT COMMENT 'Third level hierarchy of product, e.g Mobile Postpaid Combo',
	PRODUCT_UNITCOUNTABLE COMMENT 'Subscribers with plan should be counted in base.',
	PRODUCT_REVENUECOUNTABLE COMMENT 'A revenue generating product',
	SALES_CHANNEL_CODE COMMENT 'Sales Channel Code',
	SALES_CHANNEL_NAME COMMENT 'Sales Channel description',
	SALES_CHANNEL_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of sales channel',
	SALES_CHANNEL_CATEGORY COMMENT 'Hierarchy of Sales channel, e.g, direct sales, indirect sales',
	SALES_CHANNEL_SUB_CATEGORY COMMENT 'Types of direct or indirect sales, e.g Retail, Agent',
	LAST_SALES_CHANNELCODE COMMENT 'Last Sales channel code',
	LAST_SALES_CHANNELNAME COMMENT 'Last Sales channel description',
	LAST_SALES_CHANNEL_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of last sales channel.',
	LAST_SALES_CHANNEL_CATEGORY COMMENT 'First level hierarchy of Sales channel, e.g, direct sales, indirect sales',
	LAST_SALES_CHANNEL_SUB_CATEGORY COMMENT 'Second level hierarchy of last sales channel location, e.g Retail, Agent',
	SALES_CHANNEL_LOCATION_CODE COMMENT 'Sales Channel Location Code',
	SALES_CHANNEL_LOCATION_NAME COMMENT 'Sales Chanel Location Name. This is the rep for some Opcos',
	SALES_CHANNEL_LOCATION_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of sales channel location',
	SALES_CHANNEL_LOCATION_CATEGORY COMMENT 'Sales channel location level 1 hierarchy',
	SALES_CHANNEL_LOCATION_SUB_CATEGORY COMMENT 'Sales channel location level 2 hierarchy',
	LAST_SALES_CHANNEL_LOCATION_CODE COMMENT 'Location of last channel which sold subscriber rate plan',
	LAST_SALES_CHANNEL_LOCATION_NAME COMMENT 'Last Sales Channel Location name',
	LAST_SALES_CHANNEL_LOCATION_LEAF_LEVEL_NAME COMMENT 'Last Sales Channel name group level.Direct or Indirect Sales',
	LAST_SALES_CHANNEL_LOCATION_CATEGORY COMMENT 'Last Sales channel location category of direct or indirect sales such retail store or merchant etc',
	LAST_SALES_CHANNEL_LOCATION_SUB_CATEGORY COMMENT 'Last Sales channel location sub category',
	CUSTOMER_REGION_CODE COMMENT 'Customer region code',
	CUSTOMER_REGION_NAME COMMENT 'Customer region description',
	CUSTOMER_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of customer region type',
	OPERATING_COMPANY_REGION COMMENT 'Region location of operating company',
	CUSTOMER_REGION_CATEGORY COMMENT 'First level hierarchy of Customer region',
	BILL_TYPE_CODE COMMENT 'Bill Type code, e.g postpaid or prepaid',
	BILL_TYPE_NAME COMMENT 'Bill Type description',
	BILL_TYPE_LEAF_LEVEL_NAME COMMENT 'Lowest hierarhcy level Bill type',
	BILL_TYPE_CATEGORY COMMENT 'Bill type e.g Prepaid, Postpaid',
	BILL_TYPE_SUB_CATEGORY COMMENT 'Bill type sub category e.g Postpaid Monthly',
	BILL_CYCLE_CODE COMMENT 'Code to identify how often account will be billed',
	BILL_CYCLE_NAME COMMENT 'Name of bill cycle',
	BILL_CYCLE_LEAF_LEVEL_NAME COMMENT 'Lowest level bill cycle type hierarchy',
	BILL_CYCLE_CATEGORY COMMENT 'Top level bill cycle type hierarchy ',
	BILL_CYCLE_SUB_CATEGORY COMMENT 'Sub level bill cycle type  hierarchy',
	ACTIVATION_TYPE_CODE COMMENT 'Activation type code. Port, Non-Port',
	ACTIVATION_TYPE_NAME COMMENT 'Activation Type Name',
	ACTIVATION_TYPE_LEAF_LEVEL_NAME COMMENT 'Lowest level hierarchy of activation type.',
	ACTIVATION_TYPE_CATEGORY COMMENT 'Top level hierarchy of Activation type',
	ACTIVATION_TYPE_SUB_CATEGORY COMMENT 'Sub level hierarchy of Activation type',
	CREDIT_SCORE_CODE COMMENT 'Credit Score Code',
	CREDIT_SCORE_NAME COMMENT 'Credit Score Name',
	CREDIT_SCORE_LEAF_LEVEL_NAME COMMENT 'Credit Score direct group level',
	CREDIT_SCORE_CATEGORY COMMENT 'Credit Score category',
	CONTRACT_STATUS_CODE COMMENT 'Contract Status code',
	CONTRACT_STATUS_NAME COMMENT 'Contract Status Name',
	CONTRACT_STATUS_LEAF_LEVEL_NAME COMMENT 'Lowest Level hierarchy of contract status',
	CONTRACT_STATUS_CATEGORY COMMENT 'Contract Status Category',
	TECHNOLOGY_TYPE_CODE COMMENT 'Technology type code',
	TECHNOLOGY_NAME COMMENT 'Technology Name. Transformed field based on custom defined mapping per Opco requirements',
	TECHNOLOGY_LINE_CATEGORY COMMENT 'Technology Line Category, Mobile, Video, Landline',
	TECHNOLOGY_LINE_SUB_CATEGORY COMMENT 'Technology line category, GSM, LTE etc. Custom mapping applied based on Opco requirements',
	EQUIPMENT_TYPE_CODE COMMENT 'Equipment type code',
	EQUIPMENT_TYPE_NAME COMMENT 'Equipment type name',
	EQUIPMENT_TYPE_LEAF_LEVEL_NAME COMMENT 'Equipment type technology direct group level, e.g Smart or feature phones',
	EQUIPMENT_TYPE_TECHNOLOGY_LINE COMMENT 'Equipment type technology line, wireless mobile etc.',
	EQUIPMENT_TYPE_TECHNOLOGY_LINE_CATEGORY COMMENT 'Equipment type line of category e.g. Mobile Phone, POTS',
	EQUIPMENT_TYPE_TECHNOLOGY_LINE_SUB_CATEGORY COMMENT 'Equipment type line of sub category, e.g., Smart or feature phones',
	PROMOTION_TYPE_CODE COMMENT 'Promotion Type Code',
	PROMOTION_TYPE_NAME COMMENT 'Promotion Type name',
	PROMOTION_TYPE_LEAF_LEVEL_NAME COMMENT 'Promotion type group level.',
	PROMOTION_TYPE_CATEGORY COMMENT 'Top level hierarchy of Promotion Type',
	PROMOTION_TYPE_SUB_CATEGORY COMMENT 'Sub level hierarchy of Promotion Type',
	DISCONNECT_REASON_CODE COMMENT 'Disconnect reason code',
	DISCONNECT_REASON_CODE_NAME COMMENT 'Disconnect reason code name',
	DISCONNECT_REASON_LEAF_LEVEL_NAME COMMENT 'Disconnect reason group level',
	DISCONNECT_REASON_ACTION_TYPE COMMENT 'Disconnect Reason action type, voluntary or involuntary.',
	DISCONNECT_REASON_ACTION_TYPE_CATEGORY COMMENT 'Disconnect reason action type sub category, e.g. requested',
	DISCONNECT_REASON_ACTION_TYPE_SUB_CATEGORY COMMENT 'Disconnect reason action type sub category',
	DWELL_TYPE_CODE COMMENT 'Dwell Type code. School, hospital etc.',
	DWELL_TYPE_NAME COMMENT 'Dwell Type name',
	DWELL_TYPE_LEAF_LEVEL_NAME COMMENT 'Dwell Type group level',
	DWELL_TYPE_CATEGORY COMMENT 'Dwell Type category',
	DWELL_TYPE_SUB_CATEGORY COMMENT 'Dwell Type sub category',
	HUB_NODE_CODE COMMENT 'Hub node code is the network node that subscriber service is being served',
	HUB_NODE_NAME COMMENT 'Hub mode name',
	HUB_NODE_LEAF_LEVEL_NAME COMMENT 'Lowest hub node hierarchy',
	HUB_NODE_CATEGORY COMMENT 'Top level hierarchy',
	HUB_NODE_SUB_CATEGORY COMMENT 'Hub node sub category',
	CUSTOMER_TYPE_CODE COMMENT 'Customer type code. The account type',
	CUSTOMER_TYPE_NAME COMMENT 'Customer type name',
	CUSTOMER_TYPE_LEAF_LEVEL_NAME COMMENT 'The lowest customer type hierarchy',
	CUSTOMER_REVENUE_ACCOUNT_TYPE COMMENT 'A subscriber with a revenue or non-revenue account type',
	CUSTOMER_TYPE_CATEGORY COMMENT 'Customer Type category. Level 1 of customer type hierarchy, e.g  Commerical or Government',
	CUSTOMER_TYPE_SUB_CATEGORY COMMENT 'Customer Type category. Level 2 of customer type hierarchy, e.g, large business etc.',
	CUSTOMER_UNITCOUNTABLE COMMENT 'A customer type that should be counted in the base',
	CUSTOMER_REVENUECOUNTABLE COMMENT 'A customer type that is considered revenue countable'
) COMMENT='Semantic view for GTT payments(Billed payments, POS, Prepaid Subscriptions, TopUps'
 as 
WITH


SAA_METRICS AS(
    --GET ending active, activations, AND deactivations FOR subscribers
	SELECT *
		,	CASE WHEN ENDING_ACTIVE > 0 THEN 'Active'
				WHEN NET_DEACTIVATIONS > 0 THEN 'Deactivated'
				WHEN ENDING_ACTIVE = 0 THEN 'Not Active'
			ELSE 'Unknown'
		 	END AS MONTH_ENDING_STATUS
		,   DATEDIFF('MONTH',DATEIN, DATESTART_MONTH_ENDING) AS BID_TENURE_IN_MONTHS
	FROM 
		(	SELECT DATEADD('DAY',-1,DATEADD('MONTH',1,DATE_TRUNC('MONTH',DATESTART))) AS DATESTART_MONTH_ENDING
				, SUB.OPERATING_COMPANY_CODE
				, SUB.OPERATING_COMPANY_NAME 
				, SUB.ACCOUNTNUMBER
				, RTRIM(SUB.BID) AS BID
				, SUB.UNIT_COUNTABLE
				, SUB.REVENUE_COUNTABLE
				, SUB.OFFICIALLY_COUNTED_SUBSCRIBER
				, SUB.SYSTEMID
				, MIN(SUB.DATEIN) AS DATEIN
				--, SUB.DATASET_TYPE 
				, SUM(SUB.BEGINNING_ACTIVE) AS BEGINNING_ACTIVE
				, SUM(CASE WHEN DATE_TRUNC('MONTH',DATESTART)=DATE_TRUNC('MONTH',CURRENT_DATE) THEN BEGINNING_ACTIVE+NET_ACTIVATIONS
				      ELSE
				       SUB.ENDING_ACTIVE
				      END) AS ENDING_ACTIVE
				, SUM(SUB.DEACTIVATIONS) AS DEACTIVATIONS
				, SUM(SUB.REACTIVATIONS) AS REACTIVATIONS
				, SUM(SUB.NET_DEACTIVATIONS) AS NET_DEACTIVATIONS
				, SUM(SUB.ACTIVATIONS) AS ACTIVATIONS
				, SUM(SUB.NET_ACTIVATIONS) AS NET_ACTIVATIONS
				, SUM(SUB.NET_SUSPENDS) AS NET_SUSPENDS
				, SUM(SUB.ENDING_SUSPEND) AS ENDING_SUSPEND
				, SUM(SUB.ENDING_PENDING_DEACTIVATION) AS ENDING_PENDING_DEACTIVATION
				, SUM(SUB.ENDING_PENDING_ACTIVE) AS ENDING_PENDING_ACTIVE
				, SUM(SUB.BEGINNING_PENDING_ACTIVE) AS BEGINNING_PENDING_ACTIVE
				, SUM(SUB.BEGINNING_PENDING_DEACTIVATION) AS BEGINNING_PENDING_DEACTIVATION
			FROM ATNI_PROD.ATNI_ANALYTICS.SUBSCRIBER_BG_END_WEEKLY_MONTHLY_SNAPSHOT_DAILYACTIVITY SUB
			WHERE SUB.DATASET_TYPE IN ('BG_MONTHLY_SNAPSHOT','END_MONTHLY_SNAPSHOT', 'DAILY_SUB_ACTIVITY')
				AND SUB.OPERATING_COMPANY_CODE = 1 --GTT
			GROUP BY 1,2,3,4,5,6,7,8,9
		) AS Q
),
------------------------------------------BILL PAYMENTS------------------------------------------
TMP_GTT_RAA_BP AS (
					SELECT
					P.DATE_MONTH_ENDING,
					P.DATESTART,
				    P.BILL_REF_NO,
					P.ACTION_CODE,
					P.TRACKING_ID,
					P.ACCOUNT_NO,
					P.SUBSCR_NO,
					P.PAYMENT_TIMESTAMP,
					P.PAYMENT_TYPE,
					P.PAYMENT_METHOD,
					P.PAYMENT_CHANNEL,
					P.PAYMENT_LOCATION, ---AGENCY NAME. WILL HAVE TO JOIN TO MMS TO GET STOTE
					P.TRANS_SUBMITTER,
					P.CONVERSION_RATE_GYD,
					SUM(CASE
					  WHEN P.ACTION_CODE<>'APP' THEN P.PAYMENT_AMOUNT_USD*-1
					  ELSE
					     P.PAYMENT_AMOUNT_USD
					END) AS PAYMENT_AMOUNT_USD,
					SUM(CASE
					  WHEN P.ACTION_CODE<>'APP' THEN P.PAYMENT_AMOUNT_GYD*-1
					  ELSE
					     P.PAYMENT_AMOUNT_GYD
					END) AS PAYMENT_AMOUNT_GYD,
					SUM(CASE
					  WHEN P.ACTION_CODE<>'APP' THEN P.PAYMENT_AMOUNT_GYC*-1
					  ELSE
					     P.PAYMENT_AMOUNT_GYC
					END) AS PAYMENT_AMOUNT_GYC,
				
					SUM(P.NUMBER_OF_PAYMENTS) AS NUMBER_OF_PAYMENTS
					
					FROM(
							SELECT 
							DISTINCT
							LAST_DAY(A.POST_DATE) AS DATE_MONTH_ENDING,
							DATE(A.POST_DATE) AS DATESTART,
							A.BILL_REF_NO,
							A.ACTION_CODE,
							A.TRACKING_ID,
							A.ACCOUNT_NO,
							A.SUBSCR_NO,
							A.TRANS_DATE AS PAYMENT_TIMESTAMP,
							'Bill Payment' AS PAYMENT_TYPE,
							CASE A.PAY_METHOD
							  WHEN 1 THEN 'Check'
							  WHEN 2 THEN  'Credit Card'
							  WHEN 3 THEN  'Direct Debit'
							  WHEN 4 THEN  'Debit Card'
							  WHEN 5 THEN  'Voucher'
							  WHEN 6 THEN  'Cash'
							
							END AS PAYMENT_METHOD,
							CASE 
							  WHEN TRIM(TRANS_SOURCE)=1 AND TRANS_SUBMITTER<>'MMGUSER' THEN 'Retail Store'
							  WHEN TRIM(TRANS_SOURCE)=1 AND TRANS_SUBMITTER='MMGUSER'  THEN 'MMG'
							  WHEN TRANS_SOURCE=103 THEN 'MMG'
							  WHEN TRIM(A.TRANS_SUBMITTER)='AWAREX'  THEN 'MyAccount'
							  WHEN TRIM(UPPER(A.TRANS_SUBMITTER)) IN('LBX','GTTSAPI') AND A.TRANS_SOURCE<>103 THEN 'Agents' 
							END AS PAYMENT_CHANNEL,
							CASE 
							 WHEN A.TRANS_SOURCE=1 AND B.BRANCH IS NOT NULL THEN 'B'||BRANCH --IF TRANS SOURCE IS FROM MMS GUI THEN GET THE STORE THAT PROCESSED THE TRANSACTION
							 WHEN A.TRANS_SOURCE=1 AND B.BRANCH IS NULL THEN 'B'||A.TRANS_SOURCE
							 ELSE  
							   'A'||A.TRANS_SOURCE 
							END AS PAYMENT_LOCATION, ---AGENCY NAME. WILL HAVE TO JOIN TO MMS TO GET STOTE
							
							ROUND(A.TRANS_AMOUNT/100/CUR.CONVERSION_RATE_GYD,2) AS PAYMENT_AMOUNT_USD,
							A.TRANS_AMOUNT/100 AS PAYMENT_AMOUNT_GYD,
							A.TRANS_AMOUNT AS PAYMENT_AMOUNT_GYC,
							CUR.CONVERSION_RATE_GYD,
							1 AS NUMBER_OF_PAYMENTS,
							A.TRANS_SUBMITTER
							FROM 
							ATNI_PROD.GTT_REPORTING.BMF_EXTRACT A
							LEFT JOIN 
							ATNI_PROD.GTT_REPORTING.ALL_MMS_SALES_EXT B ON A.ANNOTATION=CAST(B.MMS_TRAN_ID AS STRING)
							LEFT JOIN 
					        ATNI_PROD.GTT_REPORTING.GTT_RAA_CURRENCY CUR ON CUR.CURRENCY='USD'
							WHERE
							DATE(A.EXTRACT_FILE_DATE)>='2020-03-01' 
							AND DATE(POST_DATE)>='2020-03-01'
							AND A.BILL_REF_NO<>0
							--AND TRIM(A.ACTION_CODE)='APP' --APPLIED PAYMENTS 
							AND A.BMF_TRANS_TYPE NOT IN(16,33,51,52,53,80,90) --IGNORE BIP TRANSACTIONS
					        AND A.NO_BILL=0 --BILLABLE PAYMENTS
					) AS P
					GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14
   ),

  TMP_GTT_RAA_RECHARGES AS (
						-------------------------------------------------------------SUBSCRIBER RECHARGES/TOPUP---------------------------------------------------------
						---NB: payment method is not available (not being populated)
						SELECT
						 DATE_MONTH_ENDING,
						 DATESTART,
						 SUBSCR_NO,
						 ACCOUNT_NO,
						 PAYMENT_TIMESTAMP,
						 PAYMENT_TYPE,
						 PAYMENT_METHOD,
						 PAYMENT_CHANNEL,
						 PAYMENT_LOCATION,
						 CONVERSION_RATE_GYD,
						 SUM(PAYMENT_AMOUNT_USD) AS PAYMENT_AMOUNT_USD,
						 SUM(PAYMENT_AMOUNT_GYD) AS PAYMENT_AMOUNT_GYD,
						 SUM(PAYMENT_AMOUNT_GYC) AS PAYMENT_AMOUNT_GYC,
						 SUM(NUMBER_OF_PAYMENTS) AS NUMBER_OF_PAYMENTS
						FROM
						(
						SELECT
						        LAST_DAY(RH.RECHARGE_DATE_TIME) AS DATE_MONTH_ENDING,
						        DATE(RECHARGE_DATE_TIME) AS DATESTART,
								RH.SUBSCR_NO,
								RH.ACCOUNT_NO,
								RECHARGE_DATE_TIME AS PAYMENT_TIMESTAMP,
								CASE
								  WHEN UPPER(NVL(RH.RECHARGE_COMMMENT,'')) LIKE 'INSWITCH%' AND RHB.AMOUNT > 0 THEN 'LendMe Repay'
						          WHEN UPPER(NVL(RH.RECHARGE_COMMMENT,'')) LIKE 'INSWITCH%' AND RHB.AMOUNT < 0 THEN 'LendMe Loan'
						          ELSE
						            'TopUp'
								END AS PAYMENT_TYPE,
								NULL AS PAYMENT_METHOD,
								CASE
						        WHEN UPPER(RH.RECHARGE_USER) IN ('USSD', 'CBS_OWNER') THEN 'Calling card'
						        WHEN UPPER(RH.RECHARGE_USER) = 'EMIDA' THEN 'Emida'
								WHEN UPPER(RH.RECHARGE_USER) = 'MMS' THEN 'Retail Store'
						        WHEN UPPER(RH.RECHARGE_USER) = 'MMGUSER' THEN 'MMG'
						        WHEN UPPER(RH.RECHARGE_USER) = 'GTTSAPI' THEN
						            CASE
						                WHEN UPPER(NVL(RH.RECHARGE_COMMMENT,'')) LIKE 'INSWITCH%' THEN 'Inswitch'
						                WHEN UPPER(NVL(RH.RECHARGE_COMMMENT,'')) LIKE 'QTU%' THEN 'Online'
						                ELSE 'GTT-API'
						            END
								WHEN RH.RECHARGE_USER = 'AWAREX' THEN 'MyGTT APP'
						        ELSE 'User'
						    END AS PAYMENT_CHANNEL,
						    NULL AS PAYMENT_LOCATION,
						    ROUND(ABS(RHB.AMOUNT)/100/CUR.CONVERSION_RATE_GYD,2) AS PAYMENT_AMOUNT_USD,
						    ABS(RHB.AMOUNT)/100 AS PAYMENT_AMOUNT_GYD,
						    ABS(RHB.AMOUNT) AS PAYMENT_AMOUNT_GYC,
						    CUR.CONVERSION_RATE_GYD,
						    1 AS NUMBER_OF_PAYMENTS
							FROM
							    ATNI_PROD.GTT_REPORTING.RECHARGE_HISTORY RH 
							    INNER JOIN ATNI_PROD.GTT_REPORTING.RECHARGE_HISTORY_BALANCE RHB 
							    ON 
							        RH.RECHARGE_ID = RHB.RECHARGE_ID 
							        AND RH.RECHARGE_ID2 = RHB.RECHARGE_ID2
							    INNER JOIN 
						        ATNI_PROD.GTT_REPORTING.GTT_RAA_CURRENCY CUR ON CUR.CURRENCY='USD'
							WHERE 
							    DATE(RH.RECHARGE_DATE_TIME) >='2020-03-01'
							    AND RHB.BALANCE_ID = 89
							    AND RHB.AMOUNT <> 0
						) AS Q
						GROUP BY 1,2,3,4,5,6,7,8,9,10
),	
TMP_GTT_RAA_SUBSCRIPTION_PURCHASES AS (
					-----------------------------------------------------DATA SUBSCRIPTION/BUNDLE PURCHASES-----------------------------------------------------------
					SELECT 
					DATE_MONTH_ENDING,
					DATESTART,
					PARENT_ACCOUNT_NO,
					PARENT_SUBSCR_NO,
					PAYMENT_TIMESTAMP,
					PAYMENT_TYPE,
					PAYMENT_METHOD,
					PAYMENT_CHANNEL,
					PAYMENT_LOCATION,
					PAYMENT_AMOUNT_USD,
					PAYMENT_AMOUNT_GYD,
					PAYMENT_AMOUNT_GYC,
					TOTAL_TAX_USD,
					TOTAL_TAX_GYD,
					TOTAL_TAX_GYC,
					CONVERSION_RATE_GYD,
					1 AS NUMBER_OF_PAYMENTS,
					PAYMENT_ITEM_CODE,
					PAYMENT_ITEM_DESCRIPTION
					FROM(
							SELECT 
							DATE_MONTH_ENDING,
							DATESTART,
							PARENT_ACCOUNT_NO,
							PARENT_SUBSCR_NO,
							PAYMENT_TIMESTAMP,
							PAYMENT_TYPE,
							PAYMENT_METHOD,
							PAYMENT_CHANNEL,
							PAYMENT_LOCATION,
							CONVERSION_RATE_GYD,
							PAYMENT_ITEM_CODE,
							PAYMENT_ITEM_DESCRIPTION,
							SUM(PAYMENT_AMOUNT_USD) AS PAYMENT_AMOUNT_USD,
							SUM(PAYMENT_AMOUNT_GYD) AS PAYMENT_AMOUNT_GYD,
							SUM(PAYMENT_AMOUNT_GYC) AS PAYMENT_AMOUNT_GYC,
							SUM(TOTAL_TAX_USD) AS TOTAL_TAX_USD,
							SUM(TOTAL_TAX_GYD) AS TOTAL_TAX_GYD,
							SUM(TOTAL_TAX_GYC) AS TOTAL_TAX_GYC
							FROM(
									SELECT
									LAST_DAY(RC.CREATE_DATE) AS DATE_MONTH_ENDING,
									DATE(RC.CREATE_DATE) AS DATESTART,
									RC.PARENT_ACCOUNT_NO,
									RC.PARENT_SUBSCR_NO,
									RC.APPLY_DATE AS PAYMENT_TIMESTAMP,
									'Prepaid Plan Purchases' AS PAYMENT_TYPE,
									RC.OFFER_ID AS PAYMENT_ITEM_CODE,
									OV.DISPLAY_VALUE AS PAYMENT_ITEM_DESCRIPTION,
									NULL AS PAYMENT_METHOD,
									CASE
									  WHEN GTMT.OFFERINSTID IS NOT NULL THEN 'Toovio'
									  WHEN UPPER(OV.DISPLAY_VALUE) LIKE 'LEND%' THEN 'LendMe'
									  ELSE  
									     'GTT Platforms'
									END AS PAYMENT_CHANNEL, 
									NULL AS PAYMENT_LOCATION,
									ROUND((AMOUNT)/100/CUR.CONVERSION_RATE_GYD,2) AS PAYMENT_AMOUNT_USD,
									(AMOUNT)/100 AS PAYMENT_AMOUNT_GYD,
									(AMOUNT) AS PAYMENT_AMOUNT_GYC,
									ROUND((TOTAL_TAX)/100/CUR.CONVERSION_RATE_GYD,2) AS TOTAL_TAX_USD,
									(TOTAL_TAX)/100 AS TOTAL_TAX_GYD,
									(TOTAL_TAX) AS TOTAL_TAX_GYC,
									CUR.CONVERSION_RATE_GYD 
									FROM
									ATNI_PROD.GTT_REPORTING.RC 
									INNER JOIN ATNI_PROD.GTT_REPORTING.RC_BALANCE RCBAL
												ON RC.RC_TERM_INST_ID = RCBAL.RC_TERM_INST_ID AND RC.BILLING_SEQUENCE_NUMBER = RCBAL.BILLING_SEQUENCE_NUMBER AND RCBAL.PAYMENT_MODE = 1
								    LEFT JOIN 
								    ATNI_PROD.GTT_REPORTING.RC_TERM_INST_EXTRACT RTIE ON RC.RC_TERM_INST_ID=RTIE.RC_TERM_INST_ID AND RTIE.EXTRACT_FILE_DATE=CURRENT_DATE
								    LEFT JOIN 
								    ( 
								      SELECT
								      DISTINCT 
								      OFFERINSTID
								      FROM 
						              ATNI_PROD.GTT_REPORTING.GTT_TOOVIO_MIDDLEWARE_TRANS
						            )  GTMT ON RTIE.OFFER_INST_ID= GTMT.OFFERINSTID
									LEFT JOIN 
									ATNI_PROD.GTT_REPORTING.OFFER_VALUES OV ON RC.OFFER_ID=OV.OFFER_ID AND OV.RESELLER_VERSION_ID=(SELECT MAX(RESELLER_VERSION_ID) FROM ATNI_PROD.GTT_REPORTING.OFFER_VALUES)
									LEFT JOIN 
					                ATNI_PROD.GTT_REPORTING.GTT_RAA_CURRENCY CUR ON CUR.CURRENCY='USD'
									WHERE
									DATE(RC.CREATE_DATE)>='2020-01-01'
									AND RCBAL.BALANCE_ID = 89
							) AS A
							GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12
					) AS Q
),

TMP_GTT_RAA_FA2_N_ME2U AS (

------------------------------------------------------------------FREE AFTER TWO and ME2U PURCHASES------------------------------------------------------------------------
SELECT 
DATE_MONTH_ENDING,
DATESTART,
ACCOUNT_NO,
SUBSCR_NO,
PAYMENT_TIMESTAMP,
PAYMENT_TYPE,
PAYMENT_METHOD,
PAYMENT_CHANNEL,
PAYMENT_LOCATION,
CONVERSION_RATE_GYD,
SUM(PAYMENT_AMOUNT_USD) AS PAYMENT_AMOUNT_USD,
SUM(PAYMENT_AMOUNT_GYD) AS PAYMENT_AMOUNT_GYD,
SUM(PAYMENT_AMOUNT_GYC) AS PAYMENT_AMOUNT_GYC,
SUM(NUMBER_OF_PAYMENTS) AS NUMBER_OF_PAYMENTS
FROM
(
		SELECT
		   LAST_DAY(MOD_DATE) AS DATE_MONTH_ENDING,
		   DATE(MOD_DATE) AS DATESTART,
		   ACCOUNT_NO,
		   SUBSCR_NO,
		   MOD_DATE AS PAYMENT_TIMESTAMP,
		   CASE 
		    WHEN MTR_COMMENT LIKE 'Debit%' THEN 'Me2U'
		    WHEN MTR_COMMENT LIKE '%FA2%' THEN 'FA2'
		    ELSE 
		      NULL
		   END AS PAYMENT_TYPE,
		   NULL AS PAYMENT_METHOD,
		   'GTT Platforms' AS PAYMENT_CHANNEL,
		   NULL AS PAYMENT_LOCATION,
		   ROUND((NVL(MTB.AMOUNT,0)/ 100/CONVERSION_RATE_GYD),2) AS PAYMENT_AMOUNT_USD,
		   (NVL(MTB.AMOUNT,0)/ 100) AS PAYMENT_AMOUNT_GYD,
		   (NVL(MTB.AMOUNT,0)) AS PAYMENT_AMOUNT_GYC,
		   CUR.CONVERSION_RATE_GYD,
		   1 AS NUMBER_OF_PAYMENTS
		FROM
		ATNI_PROD.GTT_REPORTING.MTR MT
		INNER JOIN 
		ATNI_PROD.GTT_REPORTING.MTR_BALANCE MTB USING(MTR_ID,MTR_ID2)
		LEFT JOIN 
		ATNI_PROD.GTT_REPORTING.GTT_RAA_CURRENCY CUR ON CUR.CURRENCY='USD'
		WHERE
			MTB.PAYMENT_MODE = 1
			AND DATE(MOD_DATE)>='2020-01-01'
			AND ((MT.LOGIN_NAME = 'gttsapi' AND SUBSTRING(MT.MTR_COMMENT, 1, 9) IN ('FA2 Subsc'))
			OR (MT.LOGIN_NAME = 'ussd' AND SUBSTRING(MT.MTR_COMMENT, 1, 10) = 'Debit 5926' AND ABS(MTB.AMOUNT) = 928)) 
			AND CUR.CURRENCY='USD'
	) AS Q
	GROUP BY 1,2,3,4,5,6,7,8,9,10
   
),
-------------------------------------------------------PHONE PURCHASES-----------------------------------------------------------------
TMP_GTT_RAA_PHONE_PURCHASES AS (
				SELECT 
				DISTINCT
				LAST_DAY(A.DATE_SOLD) AS DATE_MONTH_ENDING,
				A.DATE_SOLD AS DATESTART,
				C.ACCOUNTNUMBER,
				C.SUBSCR_NO,
				A.DATE_SOLD AS PAYMENT_TIMESTAMP,
				'Phone Sale' AS PAYMENT_TYPE,
				PRD_TYPE AS PAYMENT_ITEM_CODE,
				A.TRANS_TYPE_UNFILTERED AS PAYMENT_ITEM_DESCRIPTION,
				B.DESC_F AS PAYMENT_METHOD,
				'Store' AS PAYMENT_CHANNEL,
				A.BRANCH AS PAYMENT_LOCATION,
				A.LINE_TOTAL AS PAYMENT_AMOUNT_GYD,
				(A.LINE_TOTAL*100) AS PAYMENT_AMOUNT_GYC,
				A.LINE_TOTAL/CONVERSION_RATE_GYD AS PAYMENT_AMOUNT_USD,
				CUR.CONVERSION_RATE_GYD,
				1 NUMBER_OF_PAYMENTS
				FROM 
				ATNI_PROD.GTT_REPORTING.ALL_MMS_SALES A
				LEFT JOIN
				ATNI_PROD.GTT_REPORTING.ALL_MMS_SALES_TEND B ON A.HEADER_ID=TRAN_HEADER_ID --AND DATE(A.DATE_SOLD)=DATE(B.TRAN_DATE) 4
				LEFT JOIN
				ATNI_PROD.GTT_REPORTING.GTT_SAA_SUBSCRIBER_FEED_DETAIL C ON (C.ACCOUNTNUMBER=A.CLI_NUMBER OR C.SUBSCR_NO=A.CLI_NUMBER) AND C.DATESTART=A.DATE_SOLD::DATE AND C.REPORTABLE=1
				LEFT JOIN
				ATNI_PROD.GTT_REPORTING.GTT_RAA_CURRENCY CUR ON CUR.CURRENCY='USD'
				WHERE
				DATE(A.DATE_SOLD)>='2020-03-01'
				AND (A.TRANSACTION_TYPE ='PHONE SALE' OR A.PRD_TYPE='CPO')
				AND A.VOID_STATUS='N'
),


TMP_GTT_RAA_ACCESSORY_SALE AS(
---------------------------------------------------------------ACCESSORY SALE-------------------------------------------------------------
SELECT 
DISTINCT
LAST_DAY(A.DATE_SOLD) AS DATE_MONTH_ENDING,
A.DATE_SOLD AS DATESTART,
C.ACCOUNTNUMBER,
C.SUBSCR_NO,
A.DATE_SOLD AS PAYMENT_TIMESTAMP,
'Accessory Sale' AS PAYMENT_TYPE,
PRD_TYPE AS PAYMENT_ITEM_CODE,
A.TRANS_TYPE_UNFILTERED AS PAYMENT_ITEM_DESCRIPTION,
B.DESC_F AS PAYMENT_METHOD,
'Store' AS PAYMENT_CHANNEL,
A.BRANCH AS PAYMENT_LOCATION,
A.LINE_TOTAL AS PAYMENT_AMOUNT_GYD,
(A.LINE_TOTAL*100) AS PAYMENT_AMOUNT_GYC,
A.LINE_TOTAL/CONVERSION_RATE_GYD AS PAYMENT_AMOUNT_USD,
CUR.CONVERSION_RATE_GYD,
1 NUMBER_OF_PAYMENTS
FROM 
ATNI_PROD.GTT_REPORTING.ALL_MMS_SALES A
LEFT JOIN
ATNI_PROD.GTT_REPORTING.ALL_MMS_SALES_TEND B ON A.HEADER_ID=TRAN_HEADER_ID AND DATE(A.DATE_SOLD)=DATE(B.TRAN_DATE) 
LEFT JOIN
ATNI_PROD.GTT_REPORTING.GTT_SAA_SUBSCRIBER_FEED_DETAIL C ON (C.ACCOUNTNUMBER=A.CLI_NUMBER OR C.SUBSCR_NO=A.CLI_NUMBER) AND C.DATESTART=A.DATE_SOLD::DATE AND C.REPORTABLE=1
LEFT JOIN
ATNI_PROD.GTT_REPORTING.GTT_RAA_CURRENCY CUR ON CUR.CURRENCY='USD'
WHERE
DATE(A.DATE_SOLD)>='2020-03-01'
AND A.TRANSACTION_TYPE ='ACCESSORY SALE'
AND A.VOID_STATUS='N'
),

TMP_GTT_RAA_MODEM_SALE AS (
----------------------------------------------------------------MODEM SALES------------------------------------------------------------------------
SELECT 
DISTINCT
LAST_DAY(A.DATE_SOLD) AS DATE_MONTH_ENDING,
A.DATE_SOLD AS DATESTART,
C.ACCOUNTNUMBER,
C.SUBSCR_NO,
A.DATE_SOLD AS PAYMENT_TIMESTAMP,
'Modem Sale' AS PAYMENT_TYPE,
PRD_TYPE AS PAYMENT_ITEM_CODE,
A.TRANS_TYPE_UNFILTERED AS PAYMENT_ITEM_DESCRIPTION,
B.DESC_F AS PAYMENT_METHOD,
'Store' AS PAYMENT_CHANNEL,
A.BRANCH AS PAYMENT_LOCATION,
A.LINE_TOTAL AS PAYMENT_AMOUNT_GYD,
(A.LINE_TOTAL*100) AS PAYMENT_AMOUNT_GYC,
A.LINE_TOTAL/CONVERSION_RATE_GYD AS PAYMENT_AMOUNT_USD,
CUR.CONVERSION_RATE_GYD,
1 NUMBER_OF_PAYMENTS
FROM 
ATNI_PROD.GTT_REPORTING.ALL_MMS_SALES A
LEFT JOIN
ATNI_PROD.GTT_REPORTING.ALL_MMS_SALES_TEND B ON A.HEADER_ID=TRAN_HEADER_ID AND DATE(A.DATE_SOLD)=DATE(B.TRAN_DATE) 
LEFT JOIN
ATNI_PROD.GTT_REPORTING.GTT_SAA_SUBSCRIBER_FEED_DETAIL C ON (C.ACCOUNTNUMBER=A.CLI_NUMBER OR C.SUBSCR_NO=A.CLI_NUMBER) AND C.DATESTART=A.DATE_SOLD::DATE AND C.REPORTABLE=1
LEFT JOIN
ATNI_PROD.GTT_REPORTING.GTT_RAA_CURRENCY CUR ON CUR.CURRENCY='USD'
WHERE
DATE(A.DATE_SOLD)>='2020-03-01'
AND A.PRD_TYPE IN('M1','LTE')
AND A.VOID_STATUS='N'
),


PAYMENTS AS (
              SELECT 
              DATE_MONTH_ENDING,
			  DATESTART,
			  BILL_REF_NO,
			  ACTION_CODE,
			  ACCOUNT_NO,
			  SUBSCR_NO,
			  PAYMENT_TIMESTAMP,
			  PAYMENT_TYPE,
			  PAYMENT_TYPE AS PAYMENT_ITEM_CODE,
			  NULL PAYMENT_ITEM_DESCRIPTION,
			  PAYMENT_METHOD,
			  PAYMENT_CHANNEL,
		      PAYMENT_LOCATION, ---AGENCY NAME. WILL HAVE TO JOIN TO MMS TO GET STOTE
			  PAYMENT_AMOUNT_USD,
			  PAYMENT_AMOUNT_GYD,
		      PAYMENT_AMOUNT_GYC,
			  0 TOTAL_TAX_USD,
			  0 TOTAL_TAX_GYD,
			  0 TOTAL_TAX_GYC,
			  CONVERSION_RATE_GYD,
			  ROW_NUMBER() OVER (PARTITION BY DATE_MONTH_ENDING,ACCOUNT_NO ORDER BY PAYMENT_TIMESTAMP ASC) AS PAYMENT_ROW,
			  NUMBER_OF_PAYMENTS
              FROM 
              (
                   SELECT
					DATE_MONTH_ENDING,
					DATESTART,
				    BILL_REF_NO,
					ACTION_CODE,
					ACCOUNT_NO,
					SUBSCR_NO,
					PAYMENT_TIMESTAMP,
					PAYMENT_TYPE,
					PAYMENT_TYPE AS PAYMENT_ITEM_CODE,
					PAYMENT_TYPE AS  PAYMENT_ITEM_DESCRIPTION,
					PAYMENT_METHOD,
					PAYMENT_CHANNEL,
					PAYMENT_LOCATION, ---AGENCY NAME. WILL HAVE TO JOIN TO MMS TO GET STOTE
					PAYMENT_AMOUNT_USD,
					PAYMENT_AMOUNT_GYD,
					PAYMENT_AMOUNT_GYC,
					0 TOTAL_TAX_USD,
					0 TOTAL_TAX_GYD,
					0 TOTAL_TAX_GYC,
					CONVERSION_RATE_GYD,
					NUMBER_OF_PAYMENTS
					FROM 
					TMP_GTT_RAA_BP
                    UNION
                    SELECT
                     DATE_MONTH_ENDING,
					 DATESTART,
					 NULL BILL_REF_NO,
					 NULL ACTION_CODE,
					 ACCOUNT_NO,
					 SUBSCR_NO,
					 PAYMENT_TIMESTAMP,
					 PAYMENT_TYPE,
					 PAYMENT_TYPE AS PAYMENT_ITEM_CODE,
					 PAYMENT_TYPE AS  PAYMENT_ITEM_DESCRIPTION,
				     PAYMENT_METHOD,
					 PAYMENT_CHANNEL,
					 PAYMENT_LOCATION,
					 PAYMENT_AMOUNT_USD,
				     PAYMENT_AMOUNT_GYD,
				     PAYMENT_AMOUNT_GYC,
				     0 TOTAL_TAX_USD,
					 0 TOTAL_TAX_GYD,
					 0 TOTAL_TAX_GYC,
				     CONVERSION_RATE_GYD,
					 NUMBER_OF_PAYMENTS
					 FROM 
					 TMP_GTT_RAA_RECHARGES
					 UNION ALL
					 SELECT
					 DATE_MONTH_ENDING,
					 DATESTART,
					 NULL BILL_REF_NO,
					 NULL ACTION_CODE,
					 PARENT_ACCOUNT_NO,
					 PARENT_SUBSCR_NO,
					 PAYMENT_TIMESTAMP,
					 PAYMENT_TYPE,
					 PAYMENT_ITEM_CODE::STRING,
					 PAYMENT_ITEM_DESCRIPTION,
				     PAYMENT_METHOD,
					 PAYMENT_CHANNEL,
					 PAYMENT_LOCATION,
					 PAYMENT_AMOUNT_USD,
				     PAYMENT_AMOUNT_GYD,
				     PAYMENT_AMOUNT_GYC,
				     TOTAL_TAX_USD,
					 TOTAL_TAX_GYD,
					 TOTAL_TAX_GYC,
				     CONVERSION_RATE_GYD,
					 NUMBER_OF_PAYMENTS
					 FROM 
					 TMP_GTT_RAA_SUBSCRIPTION_PURCHASES
					 UNION ALL
					 SELECT
					 DATE_MONTH_ENDING,
					 DATESTART,
					 NULL BILL_REF_NO,
					 NULL ACTION_CODE,
					 ACCOUNT_NO,
					 SUBSCR_NO,
					 PAYMENT_TIMESTAMP,
					 PAYMENT_TYPE,
					 PAYMENT_TYPE AS PAYMENT_ITEM_CODE,
					 PAYMENT_TYPE AS PAYMENT_ITEM_DESCRIPTION,
				     PAYMENT_METHOD,
					 PAYMENT_CHANNEL,
					 PAYMENT_LOCATION,
					 PAYMENT_AMOUNT_USD,
				     PAYMENT_AMOUNT_GYD,
				     PAYMENT_AMOUNT_GYC,
				     0 TOTAL_TAX_USD,
					 0 TOTAL_TAX_GYD,
					 0 TOTAL_TAX_GYC,
				     CONVERSION_RATE_GYD,
					 NUMBER_OF_PAYMENTS
					 FROM 
					 TMP_GTT_RAA_FA2_N_ME2U
					 UNION
					 SELECT
					 DATE_MONTH_ENDING,
					 DATESTART,
					 NULL BILL_REF_NO,
					 NULL ACTION_CODE,
					 ACCOUNTNUMBER,
					 SUBSCR_NO,
					 PAYMENT_TIMESTAMP,
					 PAYMENT_TYPE,
					 PAYMENT_ITEM_CODE,
				     PAYMENT_ITEM_DESCRIPTION,
					 PAYMENT_METHOD,
					 PAYMENT_CHANNEL,
					 PAYMENT_LOCATION,
					 PAYMENT_AMOUNT_USD,
					 PAYMENT_AMOUNT_GYD,
					 PAYMENT_AMOUNT_GYC,
					 0 TOTAL_TAX_USD,
					 0 TOTAL_TAX_GYD,
					 0 TOTAL_TAX_GYC,
					 CONVERSION_RATE_GYD,
					 NUMBER_OF_PAYMENTS
					 FROM 
					 TMP_GTT_RAA_PHONE_PURCHASES
					 UNION
					 SELECT
					 DATE_MONTH_ENDING,
					 DATESTART,
					 NULL BILL_REF_NO,
					 NULL ACTION_CODE,
					 ACCOUNTNUMBER,
					 SUBSCR_NO,
					 PAYMENT_TIMESTAMP,
					 PAYMENT_TYPE,
					 PAYMENT_ITEM_CODE,
				     PAYMENT_ITEM_DESCRIPTION,
					 PAYMENT_METHOD,
					 PAYMENT_CHANNEL,
					 PAYMENT_LOCATION,
					 PAYMENT_AMOUNT_USD,
					 PAYMENT_AMOUNT_GYD,
					 PAYMENT_AMOUNT_GYC,
					 0 TOTAL_TAX_USD,
					 0 TOTAL_TAX_GYD,
					 0 TOTAL_TAX_GYC,
					 CONVERSION_RATE_GYD,
					 NUMBER_OF_PAYMENTS
					 FROM 
					 TMP_GTT_RAA_ACCESSORY_SALE
					 UNION
					 SELECT
					 DATE_MONTH_ENDING,
					 DATESTART,
					 NULL BILL_REF_NO,
					 NULL ACTION_CODE,
					 ACCOUNTNUMBER,
					 SUBSCR_NO,
					 PAYMENT_TIMESTAMP,
					 PAYMENT_TYPE,
					 PAYMENT_ITEM_CODE,
				     PAYMENT_ITEM_DESCRIPTION,
					 PAYMENT_METHOD,
					 PAYMENT_CHANNEL,
					 PAYMENT_LOCATION,
					 PAYMENT_AMOUNT_USD,
					 PAYMENT_AMOUNT_GYD,
					 PAYMENT_AMOUNT_GYC,
					 0 TOTAL_TAX_USD,
					 0 TOTAL_TAX_GYD,
					 0 TOTAL_TAX_GYC,
					 CONVERSION_RATE_GYD,
					 NUMBER_OF_PAYMENTS
					 FROM 
					 TMP_GTT_RAA_MODEM_SALE
					 
					 
			   ) AS A
          )

-----------------------------------------------------------------------MERGE AND ADD SAA_FEED-------------------------------------------

SELECT
1 AS  OPERATING_COMPANY_CODE, 
'GTT' AS OPERATING_COMPANY_NAME, 
PD.DATE_MONTH_ENDING,
PD.DATESTART,
PD.PAYMENT_TIMESTAMP,
PD.BILL_REF_NO AS INVOICE_NUMBER,
PD.ACCOUNT_NO AS ACCOUNTNUMBER,
PD.SUBSCR_NO,
FACTSS.BID,
FACTSS.FIRSTNAME,
FACTSS.LASTNAME,
FACTSS.COMPANY,
FACTSS.DATEIN,
PD.PAYMENT_AMOUNT_USD,
PD.PAYMENT_AMOUNT_GYD,
PD.TOTAL_TAX_USD,
PD.TOTAL_TAX_GYD,
PD.CONVERSION_RATE_GYD,
PD.NUMBER_OF_PAYMENTS,
ACCOUNT_EMAIL AS CUSTOMER_EMAIL ,
CRMC.CONTACT1_NAME ,
CRMC.CONTACT2_NAME,
CRMC.CONTACT1_PHONE ,
CRMC.CONTACT2_PHONE, 

-------------------PAYMENT TYPE-----------------------------------------------------------------------------------
PD.PAYMENT_ITEM_CODE AS PAYMENT_TYPE_CODE,
DIMPT.PAYMENTTYPENAME AS PAYMENT_TYPE_NAME,
NVL(DIMPT.LEAFLEVELNAME,'NEW PAYMENT TYPE') AS PAYMENT_TYPE_LEAF_LEVEL_NAME,
NVL(DIMPT.GEN02LEVELNAME,'NEW PAYMENT TYPE') AS PAYMENT_TYPE_CATGORY,
-------------------PAYMENT LOCATION--------------------------------------------------------------------------------
PD.PAYMENT_LOCATION AS PAYMENT_LOCATION_CODE,
NVL(DIMPL.PAYMENTLOCATIONNAME,'NEW PAYMENT LOCATION') AS PAYMENT_LOCATION_NAME,
NVL(DIMPL.LEAFLEVELNAME,'NEW PAYMENT LOCATION') AS PAYMENT_LOCATION_LEAF_LEVEL_NAME,
NVL(DIMPL.GEN02LEVELNAME, 'NEW PAYMENT LOCATION') AS PAYMENT_LOCATION_CATGORY,

---------------------PAYMENT METHOD---------------------------------------------------------------------------------
PD.PAYMENT_METHOD AS PAYMENT_METHOD_CODE,
NVL(DIMPM.PAYMENTMETHODNAME,'NEW PAYMENT METHOD') AS PAYMENT_METHOD_NAME,
NVL(DIMPM.LEAFLEVELNAME,'NEW PAYMENT METHOD') AS PAYMENT_METHOD_LEAF_LEVEL_NAME,
NVL(DIMPM.GEN02LEVELNAME,'NEW PAYMENT METHOD') AS PAYMENT_METHOD_CATGORY,

---------------------PAYMENT CHANNEL---------------------------------------------------------------------------------
PD.PAYMENT_CHANNEL AS PAYMENT_CHANNEL_CODE,
NVL(DIMPC.PAYMENTCHANNELNAME,'NEW PAYMENT CHANNEL') AS PAYMENT_CHANNEL_NAME,
NVL(DIMPC.LEAFLEVELNAME,'NEW PAYMENT CHANNEL') AS PAYMENT_CHANNEL_LEAF_LEVEL_NAME,
NVL(DIMPC.GEN02LEVELNAME,'NEW PAYMENT CHANNEL') AS PAYMENT_CHANNEL_CATGORY,
----------------------------------------------------------------------------------------------------------------------
FACTSS.SYSTEMID,
----------------------------------------------SAA METRICS-------------------------------------------------------------
SAA.MONTH_ENDING_STATUS,
SAA.UNIT_COUNTABLE,
SAA.REVENUE_COUNTABLE,
SAA.OFFICIALLY_COUNTED_SUBSCRIBER,
SAA.BEGINNING_ACTIVE,
SAA.ENDING_ACTIVE,
SAA.DEACTIVATIONS,
SAA.REACTIVATIONS,
SAA.NET_DEACTIVATIONS,
SAA.ACTIVATIONS,
SAA.NET_ACTIVATIONS,
SAA.NET_SUSPENDS,
SAA.ENDING_SUSPEND,
SAA.ENDING_PENDING_DEACTIVATION,
SAA.ENDING_PENDING_ACTIVE,
SAA.BEGINNING_PENDING_ACTIVE,
SAA.BEGINNING_PENDING_DEACTIVATION,
SAA.BID_TENURE_IN_MONTHS,
----------------------------------------AGGREGATION_INDICATOR---------------------------------
	
IFF(PAYMENT_ROW=1,1,0) AS AGGREGATION_IND,
-----------------------------------------SAA SPECIFIC----------------------------------------- 	
--------------------------------------------------------------------------------------DIMENSIONS-------------------------------------------------------------------------------
  ----------PRODUCT-------------------------------------------------
  DIMPRO.PRODUCTCODE AS PRODUCT_CODE, 
  DIMPRO.PRODUCTNAME AS PRODUCT_NAME, 
  DIMPRO.LEAFLEVELNAME AS PRODUCT_LEAF_LEVEL_NAME, 
  DIMPRO.GEN03LEVELNAME AS LINE_OF_SERVICE, 
  DIMPRO.GEN04LEVELNAME AS SUBLINE_OF_SERVICE, 
  NVL(DIMPRO.GEN05LEVELNAME,DIMPRO.GEN04LEVELNAME) AS SUBLINE_OF_SERVICE_SEGMENT, 
  DIMPRO.UNITCOUNTABLE AS PRODUCT_UNITCOUNTABLE,
  DIMPRO.REVENUECOUNTABLE AS PRODUCT_REVENUECOUNTABLE,
  ----------SALES CHANNEL------------------------------------------ 
  DIMSALE.SALESCHANNELCODE AS SALES_CHANNEL_CODE, 
  DIMSALE.SALESCHANNELNAME AS SALES_CHANNEL_NAME, 
  DIMSALE.LEAFLEVELNAME AS SALES_CHANNEL_LEAF_LEVEL_NAME, 
  DIMSALE.GEN02LEVELNAME AS SALES_CHANNEL_CATEGORY,  
  NVL(DIMSALE.GEN03LEVELNAME,DIMSALE.GEN02LEVELNAME) AS SALES_CHANNEL_SUB_CATEGORY, 
  ----------LAST SALES CHANNEL ---------------------- -------------- 
  DIMSALESA.SALESCHANNELCODE AS LAST_SALES_CHANNELCODE, 
  DIMSALESA.SALESCHANNELNAME AS LAST_SALES_CHANNELNAME, 
  DIMSALESA.LEAFLEVELNAME AS LAST_SALES_CHANNEL_LEAF_LEVEL_NAME,  
  DIMSALESA.GEN02LEVELNAME AS LAST_SALES_CHANNEL_CATEGORY, 
  NVL(DIMSALESA.GEN03LEVELNAME, DIMSALESA.GEN02LEVELNAME) AS LAST_SALES_CHANNEL_SUB_CATEGORY, 
  ----------SALES CHANNEL LOCATION----------------------------------
  DIMLOC.SALESLOCATIONCODE AS SALES_CHANNEL_LOCATION_CODE, 
  DIMLOC.SALESLOCATIONNAME AS SALES_CHANNEL_LOCATION_NAME,
  DIMLOC.LEAFLEVELNAME AS SALES_CHANNEL_LOCATION_LEAF_LEVEL_NAME,  
  DIMLOC.GEN02LEVELNAME AS SALES_CHANNEL_LOCATION_CATEGORY,
  NVL(DIMLOC.GEN03LEVELNAME,DIMLOC.GEN02LEVELNAME) AS SALES_CHANNEL_LOCATION_SUB_CATEGORY, 
  ----------LAST SALES CHANNNEL LOCATION----------------------------- 
  DIMLOCSA.SALESLOCATIONCODE AS LAST_SALES_CHANNEL_LOCATION_CODE, 
  DIMLOCSA.SALESLOCATIONNAME AS LAST_SALES_CHANNEL_LOCATION_NAME, 
  DIMLOCSA.LEAFLEVELNAME AS LAST_SALES_CHANNEL_LOCATION_LEAF_LEVEL_NAME, 
  DIMLOCSA.GEN02LEVELNAME AS LAST_SALES_CHANNEL_LOCATION_CATEGORY,
  NVL(DIMLOCSA.GEN03LEVELNAME,DIMLOCSA.GEN02LEVELNAME) AS LAST_SALES_CHANNEL_LOCATION_SUB_CATEGORY, 
  
  ----------CUSTOMER REGION-----------------------------------------------
  DIMCUSTR.CUSTOMERREGIONCODE AS CUSTOMER_REGION_CODE, 
  DIMCUSTR.CUSTOMERREGIONNAME AS CUSTOMER_REGION_NAME, 
  DIMCUSTR.LEAFLEVELNAME AS CUSTOMER_LEAF_LEVEL_NAME, 
  DIMCUSTR.GEN02LEVELNAME AS OPERATING_COMPANY_REGION,  
  DIMCUSTR.GEN03LEVELNAME AS CUSTOMER_REGION_CATEGORY, 
  ----------BILL TYPE ----------------------------------------------------
  DIMBILLT.BILLTYPECODE AS BILL_TYPE_CODE, 
  DIMBILLT.BILLTYPENAME AS BILL_TYPE_NAME,  
  DIMBILLT.LEAFLEVELNAME AS BILL_TYPE_LEAF_LEVEL_NAME, 
  DIMBILLT.GEN02LEVELNAME AS BILL_TYPE_CATEGORY, 
  NVL(DIMBILLT.GEN03LEVELNAME, DIMBILLT.GEN02LEVELNAME) AS BILL_TYPE_SUB_CATEGORY,
  -----------BILL CYCLE ----------------------------------------------------
  DIMBILLC.BILLCYCLECODE AS BILL_CYCLE_CODE, 
  DIMBILLC.BILLCYCLENAME AS BILL_CYCLE_NAME,  
  DIMBILLC.LEAFLEVELNAME AS BILL_CYCLE_LEAF_LEVEL_NAME, 
  DIMBILLC.GEN02LEVELNAME AS BILL_CYCLE_CATEGORY, 
  NVL(DIMBILLC.GEN03LEVELNAME, DIMBILLC.GEN02LEVELNAME) AS BILL_CYCLE_SUB_CATEGORY,
  ---------ACTIVATION TYPE-----------------------------------------------
  DIMACTT.ACTIVATIONTYPECODE AS ACTIVATION_TYPE_CODE, 
  DIMACTT.ACTIVATIONTYPENAME AS ACTIVATION_TYPE_NAME, 
  DIMACTT.LEAFLEVELNAME AS ACTIVATION_TYPE_LEAF_LEVEL_NAME, 
  DIMACTT.GEN02LEVELNAME AS ACTIVATION_TYPE_CATEGORY, 
  NVL(DIMACTT.GEN03LEVELNAME, DIMACTT.GEN02LEVELNAME) AS ACTIVATION_TYPE_SUB_CATEGORY, 
  ---------CREDIT SCORE---------------------------------------------------
  DIMCRED.CREDITSCORECODE AS CREDIT_SCORE_CODE, 
  DIMCRED.CREDITSCORENAME AS CREDIT_SCORE_NAME, 
  DIMCRED.LEAFLEVELNAME AS CREDIT_SCORE_LEAF_LEVEL_NAME, 
  DIMCRED.GEN02LEVELNAME AS CREDIT_SCORE_CATEGORY, 
  ---------CONTRACT STATUS------------------------------------------------
  DIMCONT.CONTRACTSTATUSCODE AS CONTRACT_STATUS_CODE, 
  DIMCONT.CONTRACTSTATUSNAME AS CONTRACT_STATUS_NAME, 
  DIMCONT.LEAFLEVELNAME AS CONTRACT_STATUS_LEAF_LEVEL_NAME, 
  DIMCONT.GEN02LEVELNAME AS CONTRACT_STATUS_CATEGORY, 
  --------TECHNOLOGY TYPE-------------------------------------------------
  DIMTECH.TECHNOLOGYTYPECODE AS TECHNOLOGY_TYPE_CODE, 
  DIMTECH.TECHNOLOGYTYPENAME AS TECHNOLOGY_NAME, 
  DIMTECH.GEN02LEVELNAME AS TECHNOLOGY_LINE_CATEGORY, 
  NVL(DIMTECH.GEN03LEVELNAME, DIMTECH.GEN02LEVELNAME) AS TECHNOLOGY_LINE_SUB_CATEGORY, 
  --------EQUIPMENT TYPE----------------------------------------------------
  DIMEQUIP.EQUIPMENTTYPECODE AS EQUIPMENT_TYPE_CODE, 
  DIMEQUIP.EQUIPMENTTYPENAME AS EQUIPMENT_TYPE_NAME,  
  DIMEQUIP.LEAFLEVELNAME AS EQUIPMENT_TYPE_LEAF_LEVEL_NAME, 
  DIMEQUIP.GEN02LEVELNAME AS EQUIPMENT_TYPE_TECHNOLOGY_LINE, 
  DIMEQUIP.GEN03LEVELNAME AS EQUIPMENT_TYPE_TECHNOLOGY_LINE_CATEGORY, 
  NVL(DIMEQUIP.GEN04LEVELNAME, DIMEQUIP.GEN03LEVELNAME) AS EQUIPMENT_TYPE_TECHNOLOGY_LINE_SUB_CATEGORY, 
 ---------PROMOTION TYPE----------------------------------------------------
  DIMPROM.PROMOTIONTYPECODE AS PROMOTION_TYPE_CODE, 
  DIMPROM.PROMOTIONTYPENAME AS PROMOTION_TYPE_NAME, 
  DIMPROM.LEAFLEVELNAME AS PROMOTION_TYPE_LEAF_LEVEL_NAME,  
  DIMPROM.GEN02LEVELNAME AS PROMOTION_TYPE_CATEGORY, 
  NVL(DIMPROM.GEN03LEVELNAME, DIMPROM.GEN02LEVELNAME) AS PROMOTION_TYPE_SUB_CATEGORY, 
  --------DISCONNECT REASON--------------------------------------------------
  DIMDISC.DISCONNECTREASONCODECODE AS DISCONNECT_REASON_CODE, 
  DIMDISC.DISCONNECTREASONCODENAME AS DISCONNECT_REASON_CODE_NAME, 
  DIMDISC.LEAFLEVELNAME AS DISCONNECT_REASON_LEAF_LEVEL_NAME, 
  DIMDISC.GEN02LEVELNAME AS DISCONNECT_REASON_ACTION_TYPE, 
  DIMDISC.GEN03LEVELNAME AS DISCONNECT_REASON_ACTION_TYPE_CATEGORY, 
  NVL(DIMDISC.GEN04LEVELNAME, DIMDISC.GEN03LEVELNAME) AS DISCONNECT_REASON_ACTION_TYPE_SUB_CATEGORY, 
  --------DWELL TYPE---------------------------------------------------------
  DIMDWEL.DWELLTYPECODE AS DWELL_TYPE_CODE, 
  DIMDWEL.DWELLTYPENAME AS DWELL_TYPE_NAME,  
  DIMDWEL.LEAFLEVELNAME AS DWELL_TYPE_LEAF_LEVEL_NAME, 
  DIMDWEL.GEN02LEVELNAME AS DWELL_TYPE_CATEGORY,
  NVL(DIMDWEL.GEN03LEVELNAME,  DIMDWEL.GEN02LEVELNAME)  AS DWELL_TYPE_SUB_CATEGORY, 
 ---------HUB NODE TYPE------------------------------------------------------
  DIMHUB.HUBNODECODE AS HUB_NODE_CODE, 
  DIMHUB.HUBNODENAME AS HUB_NODE_NAME, 
  DIMHUB.LEAFLEVELNAME AS HUB_NODE_LEAF_LEVEL_NAME, 
  DIMHUB.GEN02LEVELNAME AS HUB_NODE_CATEGORY, 
  NVL(DIMHUB.GEN03LEVELNAME, DIMHUB.GEN02LEVELNAME)  AS HUB_NODE_SUB_CATEGORY, 
  -------CUSTOMER TYPE-------------------------------------------------------
  DIMCUSTT.CUSTOMERTYPECODE AS CUSTOMER_TYPE_CODE, 
  DIMCUSTT.CUSTOMERTYPENAME AS CUSTOMER_TYPE_NAME, 
  DIMCUSTT.LEAFLEVELNAME AS CUSTOMER_TYPE_LEAF_LEVEL_NAME, 
  DIMCUSTT.GEN02LEVELNAME AS CUSTOMER_REVENUE_ACCOUNT_TYPE, 
  DIMCUSTT.GEN03LEVELNAME AS CUSTOMER_TYPE_CATEGORY,  
  NVL(DIMCUSTT.GEN04LEVELNAME, DIMCUSTT.GEN04LEVELNAME) AS CUSTOMER_TYPE_SUB_CATEGORY,
  DIMCUSTT.UNITCOUNTABLE AS CUSTOMER_UNITCOUNTABLE,
  DIMCUSTT.REVENUECOUNTABLE AS CUSTOMER_REVENUECOUNTABLE

FROM
PAYMENTS AS PD
LEFT JOIN
ATNI_PROD.GTT_REPORTING.GTT_SAA_SUBSCRIBER_FEED_DETAIL FACTSS ON FACTSS.ACCOUNTNUMBER=PD.ACCOUNT_NO AND FACTSS.SUBSCR_NO=NVL(PD.SUBSCR_NO,0) 
                                                                 AND FACTSS.DATESTART=PD.DATESTART AND FACTSS.REPORTABLE=1
LEFT JOIN 
SAA_METRICS SAA ON FACTSS.ACCOUNTNUMBER=SAA.ACCOUNTNUMBER AND FACTSS.BID=SAA.BID AND DATE_TRUNC('MONTH',FACTSS.DATESTART)=DATE_TRUNC('MONTH',SAA.DATESTART_MONTH_ENDING) AND FACTSS.REPORTABLE=1

----------------------------------------------------------GTT Contacts -----------------------------------------------------------
	  LEFT OUTER JOIN ATNI_PROD.SALESFORCE.GTT_CRM_CONTACTS CRMC ON FACTSS.SOURCESYSTEMID=1 AND FACTSS.ACCOUNTNUMBER=CRMC.ACCOUNTNUMBER

----------------------------------------------JOIN RAA TABLES-------------------------------
LEFT JOIN 
ATNI_PROD.DIMENSIONS_REPORTING.DIMPAYMENTTYPE DIMPT ON PD.PAYMENT_ITEM_CODE=DIMPT.PAYMENTTYPECODE 
LEFT JOIN 
ATNI_PROD.DIMENSIONS_REPORTING.DIMPAYMENTMETHOD DIMPM ON PD.PAYMENT_METHOD=DIMPM.PAYMENTMETHODCODE 
LEFT JOIN 
ATNI_PROD.DIMENSIONS_REPORTING.DIMPAYMENTLOCATION DIMPL ON PD.PAYMENT_LOCATION=DIMPL.PAYMENTLOCATIONCODE 
LEFT JOIN 
ATNI_PROD.DIMENSIONS_REPORTING.DIMPAYMENTCHANNEL DIMPC ON PD.PAYMENT_CHANNEL=DIMPC.PAYMENTCHANNELCODE 

------------------------------------------------SAA DIMENSION TABLES-----------------------------------------------
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMPRODUCT DIMPRO ON FACTSS.RATEPLANCODE::STRING = DIMPRO.PRODUCTCODE 
	AND FACTSS.SOURCESYSTEMID = DIMPRO.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMSALESCHANNEL DIMSALE ON FACTSS.SALESCHANNEL = DIMSALE.SALESCHANNELCODE 
	AND FACTSS.SOURCESYSTEMID = DIMSALE.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMSALESCHANNEL DIMSALESA ON FACTSS.SALESCHANNELLAST = DIMSALESA.SALESCHANNELCODE 
	AND FACTSS.SOURCESYSTEMID = DIMSALESA.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMSALESLOCATION DIMLOC ON FACTSS.SALESLOCATION = DIMLOC.SALESLOCATIONCODE 
	AND FACTSS.SOURCESYSTEMID = DIMLOC.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMSALESLOCATION DIMLOCSA ON FACTSS.SALESLOCATIONLAST = DIMLOCSA.SALESLOCATIONCODE 
	AND FACTSS.SOURCESYSTEMID = DIMLOCSA.SOURCESYSTEMID 		
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMCUSTOMERREGION DIMCUSTR ON FACTSS.CUSTOMERREGION::STRING = DIMCUSTR.CUSTOMERREGIONCODE 
	AND FACTSS.SOURCESYSTEMID = DIMCUSTR.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMBILLTYPE DIMBILLT ON FACTSS.BILL_TYPE = DIMBILLT.BILLTYPECODE 
	AND FACTSS.SOURCESYSTEMID = DIMBILLT.SOURCESYSTEMID 		
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMCUSTOMERTYPE DIMCUSTT ON FACTSS.CUSTOMER_TYPE::STRING = DIMCUSTT.CUSTOMERTYPECODE 
	AND FACTSS.SOURCESYSTEMID = DIMCUSTT.SOURCESYSTEMID 		
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMCREDITSCORE DIMCRED ON FACTSS.CREDITSCORE = DIMCRED.CREDITSCORECODE 
	AND FACTSS.SOURCESYSTEMID = DIMCRED.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMCONTRACTSTATUS DIMCONT ON FACTSS.CONTRACTSTATUS = DIMCONT.CONTRACTSTATUSCODE 
	AND FACTSS.SOURCESYSTEMID = DIMCONT.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMTECHNOLOGYTYPE DIMTECH ON TO_VARCHAR(FACTSS.TECHNOLOGYTYPE) = TO_VARCHAR(DIMTECH.TECHNOLOGYTYPECODE) 
	AND FACTSS.SOURCESYSTEMID = DIMTECH.SOURCESYSTEMID
--		AND TO_VARCHAR(FACTSS.SOURCESYSTEMID) = TO_VARCHAR(DIMTECH.SOURCESYSTEMID)
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMEQUIPMENTTYPE DIMEQUIP ON FACTSS.EQUIPMENTTYPE = DIMEQUIP.EQUIPMENTTYPECODE 
	AND FACTSS.SOURCESYSTEMID = DIMEQUIP.SOURCESYSTEMID
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMPROMOTIONTYPE DIMPROM ON FACTSS.PROMOTIONTYPE = DIMPROM.PROMOTIONTYPECODE 
	AND FACTSS.SOURCESYSTEMID = DIMPROM.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMDWELLTYPE DIMDWEL ON FACTSS.DWELLTYPE = DIMDWEL.DWELLTYPECODE 
	AND FACTSS.SOURCESYSTEMID = DIMDWEL.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMHUBNODE DIMHUB ON FACTSS.HUBNODE = DIMHUB.HUBNODECODE 
	AND FACTSS.SOURCESYSTEMID = DIMHUB.SOURCESYSTEMID 
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMACTIVATIONTYPE DIMACTT ON FACTSS.INREASONCODE = DIMACTT.ACTIVATIONTYPECODE 
	AND FACTSS.SOURCESYSTEMID = DIMACTT.SOURCESYSTEMID 		
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMDISCONNECTREASONCODE DIMDISC ON FACTSS.OUTREASONCODE::STRING = DIMDISC.DISCONNECTREASONCODECODE 
	AND FACTSS.SOURCESYSTEMID = DIMDISC.SOURCESYSTEMID
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMOPERATINGCOMPANY DIMOPT ON FACTSS.SOURCESYSTEMID = DIMOPT.OPERATINGCOMPANYCODE 
	AND FACTSS.SOURCESYSTEMID = DIMOPT.SOURCESYSTEMID 		
LEFT JOIN ATNI_PROD.SC_OUTPUT.DIMOPERATINGCOMPANY OP ON FACTSS.SOURCESYSTEMID=OP.SOURCESYSTEMID
LEFT OUTER JOIN ATNI_PROD.SC_OUTPUT.DIMBILLCYCLE DIMBILLC ON FACTSS.BILLCYCLE = DIMBILLC.BILLCYCLECODE 
	AND FACTSS.SOURCESYSTEMID = DIMBILLC.SOURCESYSTEMID;