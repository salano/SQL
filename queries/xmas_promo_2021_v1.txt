SELECT 
    distinct 
	TRANS_DT,
    REGION,
	TP.EXTERNAL_ID AS PHONE_NUMBER,
	'TOP UP' AS PRODUCT,
	C.BILL_FNAME First_Name,
	C.BILL_LNAME Last_Name,
	C.CUST_EMAIL email,
	'Top Up >$1000' AS EVENT--,
	--AMOUNT_GYD
FROM 
	ATNI_DEV.GTT_REPORTING.SV_GTT_DAILY_TOPUPS TP
	--LEFT JOIN GTT_REPORTING.EXTERNAL_ID_EQUIP_MAP_EXTRACT EE
     --ON TP.EXTERNAL_ID  = EE.EXTERNAL_ID 
    LEFT JOIN GTT_REPORTING.CMF_EXTRACT C
     ON TP.ACCOUNT_NO = C.ACCOUNT_NO 
WHERE 
	date(TRANS_DT) >= to_date('2021-04-01','YYYY-MM-DD') --add_months(date(current_date), -3) AND date(current_date)
	AND AMOUNT_GYD > 1000
	--AND date(EE.EXTRACT_FILE_DATE) = date(current_date)
	AND date(C.EXTRACT_FILE_DATE) = date(current_date)

UNION
--------------------------------
	SELECT
	distinct
	TRANS_DATE as TRANS_DT,
	TRE.REGION_NUMBER REGION,
	--BMF.POST_DATE AS TRANS_DT,
	EE.EXTERNAL_ID PHONE_NUMBER,
	CASE WHEN EE.EXTERNAL_ID_TYPE = 1 THEN 'Mobile'
		WHEN EE.EXTERNAL_ID_TYPE = 9 THEN 'Landline'
		WHEN EE.EXTERNAL_ID_TYPE = 11 THEN 'DSL'
		ELSE 'BLAZE' END AS Product,
	CMF.BILL_FNAME First_Name,
	CMF.BILL_LNAME Last_Name,
	iff (CMF.CUST_EMAIL IS NOT NULL, CMF.CUST_EMAIL, CMF.STATEMENT_TO_EMAIL) EMAIL,
	'Paid their bill in full' AS event
	/*--EE.SUBSCR_NO,
	--BMF.ACCOUNT_NO,
	--CAST(BMF.ORIG_BILL_REF_NO AS VARCHAR(30)) AS BILL_REF_NO,
	BMF.TRANS_AMOUNT/100 AS TRANS_AMT,
	CB.TOTAL_DUE/100 AS BILL_AMT,
	SUBSTRING(TSV.DISPLAY_VALUE,1,30) AS ACTIVITY_TYPE,*/



FROM (SELECT * FROM GTT_REPORTING.BMF_EXTRACT WHERE DATE(EXTRACT_FILE_DATE) = current_date) BMF
	JOIN TRANS_SOURCE_VALUES TSV
	ON BMF.TRANS_SOURCE = TSV.TRANS_SOURCE
	JOIN (SELECT ACCOUNT_NO, ACCOUNT_CATEGORY, CUST_EMAIL, STATEMENT_TO_EMAIL, BILL_FNAME, BILL_LNAME  FROM GTT_REPORTING.CMF_EXTRACT WHERE DATE(EXTRACT_FILE_DATE) = CURRENT_DATE) CMF
	ON CMF.ACCOUNT_NO = BMF.ACCOUNT_NO AND CMF.ACCOUNT_CATEGORY = 10
	JOIN (SELECT * FROM GTT_REPORTING.CMF_BALANCE WHERE DATE(EFFECTIVE_DT) <= CURRENT_DATE AND DATE(EXPIRY_DT) > CURRENT_DATE) CB
	ON CB.ACCOUNT_NO = BMF.ACCOUNT_NO AND CB.BILL_REF_NO = BMF.ORIG_BILL_REF_NO 
	JOIN (SELECT ACCOUNT_NO, EXTERNAL_ID, SUBSCR_NO, EXTERNAL_ID_TYPE
		FROM GTT_REPORTING.EXTERNAL_ID_EQUIP_MAP E1
		WHERE E1.EXTERNAL_ID_TYPE IN (1,9,11,37)
		AND DATE(E1.EFFECTIVE_DT) <= CURRENT_DATE AND DATE(E1.EXPIRY_DT) > CURRENT_DATE
		AND E1.IS_CURRENT = 1
		AND REGEXP_LIKE(EXTERNAL_ID, '592\\d+')
		AND ACCOUNT_NO IN (SELECT ACCOUNT_NO
		FROM GTT_REPORTING.EXTERNAL_ID_EQUIP_MAP E2
		WHERE E2.EXTERNAL_ID_TYPE IN (1,9,11,37)
		AND DATE(E2.EFFECTIVE_DT) <= CURRENT_DATE AND DATE(E2.EXPIRY_DT) > CURRENT_DATE
		AND E2.IS_CURRENT = 1
		GROUP BY E2.ACCOUNT_NO
		HAVING COUNT(DISTINCT E2.EXTERNAL_ID) = 1)) EE
	ON BMF.ACCOUNT_NO = EE.ACCOUNT_NO
   LEFT JOIN ATNI_PROD.GTT_REPORTING.TELEPHONE_RANGE_BY_EXCHANGE TRE 
   ON CAST(EE.EXTERNAL_ID AS integer) >= CAST(TRE.START_RANGE AS integer) AND EE.EXTERNAL_ID <= CAST(TRE.END_RANGE AS integer)  
 
WHERE DATE(TRANS_DATE) >= to_date('2021-01-01','YYYY-MM-DD') --add_months(date(current_date), -3) --AND DATE(POST_DATE) = CURRENT_DATE - 1
AND BMF.NO_BILL = 0 AND BMF.TRANS_AMOUNT > 99999
AND BMF.BMF_TRANS_TYPE NOT IN (16,51,52,53,80,90)
AND CB.BALANCE_DUE <= 0
--AND BMF.TRANS_SOURCE = 108	--MyGTT
--AND NOT (CB.CLOSED_DATE IS NOT NULL AND CB.CLOSED_DATE > CB.PPDD_DATE)
AND CLOSED_DATE <= PPDD_DATE

UNION
--------------------------------------------------------------------

SELECT
    DISTINCT 
	AMS.DATE_SOLD AS TRANS_DT,
    SSL.REGION,
	--AMS.DATE_SOLD AS TRANS_DT,
	EE.EXTERNAL_ID AS PHONE_NUMBER,
	SUBSTRING(NVL(AMS.TRANS_TYPE_UNFILTERED,' '),1,30) AS Product,
	EE.BILL_FNAME First_Name,
	EE.BILL_LNAME Last_Name,
	iff (EE.CUST_EMAIL IS NOT NULL, EE.CUST_EMAIL, EE.STATEMENT_TO_EMAIL) EMAIL,
	'Purchased a handset' AS event
	--EE.SUBSCR_NO,
	--EE.ACCOUNT_NO,
	--CAST(AMS.INV_NUMBER AS VARCHAR(30)) AS BILL_REF_NO,
	--LINE_TOTAL AS TRANS_AMT,
	--LINE_TOTAL_COST AS BILL_AMT,
	
	--,
	--FLOOR((AMS.LINE_TOTAL + 1) / 5000) AS ENTRIES
FROM GTT_REPORTING.ALL_MMS_SALES AMS
	JOIN (SELECT DISTINCT EE.EXTERNAL_ID, EE.EXTERNAL_ID_TYPE, EE.SUBSCR_NO, EE.ACCOUNT_NO, CC.CUST_EMAIL, CC.STATEMENT_TO_EMAIL, CC.BILL_FNAME, CC.BILL_LNAME 
			FROM GTT_REPORTING.EXTERNAL_ID_EQUIP_MAP_EXTRACT EE
			JOIN GTT_REPORTING.CMF_EXTRACT CC ON EE.ACCOUNT_NO = CC.ACCOUNT_NO
			WHERE DATE(EE.EXTRACT_FILE_DATE) = CURRENT_DATE
				AND DATE(CC.EXTRACT_FILE_DATE) = CURRENT_DATE
			AND EE.IS_CURRENT = 1 AND EE.EXTERNAL_ID_TYPE IN (1,9) AND EE.EXTERNAL_ID != '5922251315') EE
	ON (AMS.CLI_NUMBER = EE.ACCOUNT_NO OR AMS.CLI_NUMBER = EE.SUBSCR_NO )
	LEFT JOIN GTT_REPORTING.SWITCH_SUBS_LOCATION SSL
	ON EE.EXTERNAL_ID = SSL.MSISDN 
	
WHERE date(DATE_SOLD) >= to_date('2021-01-01','YYYY-MM-DD')--add_months(date(current_date), -3)
   --AND (SSL.FILE_DT) = date(current_date) -1
--AND AMS.TRANSACTION_TYPE = 'PHONE SALE'
AND (regexp_like(AMS.PRD_TYPE, 'P\\d{0,2}') OR AMS.PRD_TYPE = 'CPO')
AND VOID_STATUS ='N'

UNION
--------------------------------------------------------------------------------
SELECT
    DISTINCT 
	AMS.DATE_SOLD AS TRANS_DT,
    SSL.REGION,
	--AMS.DATE_SOLD AS TRANS_DT,
	EE.EXTERNAL_ID AS PHONE_NUMBER,
	SUBSTRING(NVL(AMS.TRANS_TYPE_UNFILTERED,' '),1,30) AS Product,
	EE.BILL_FNAME First_Name,
	EE.BILL_LNAME Last_Name,
	iff (EE.CUST_EMAIL IS NOT NULL, EE.CUST_EMAIL, EE.STATEMENT_TO_EMAIL) EMAIL,
	'Purchased a SIM Card' AS Event
	--EE.SUBSCR_NO,
	--EE.ACCOUNT_NO,
	--CAST(AMS.INV_NUMBER AS VARCHAR(30)) AS BILL_REF_NO,
	--LINE_TOTAL AS TRANS_AMT,
	--LINE_TOTAL_COST AS BILL_AMT,
	
	--,
	--FLOOR((AMS.LINE_TOTAL + 1) / 5000) AS ENTRIES
FROM GTT_REPORTING.ALL_MMS_SALES AMS
	JOIN (SELECT DISTINCT EE.EXTERNAL_ID, EE.EXTERNAL_ID_TYPE, EE.SUBSCR_NO, EE.ACCOUNT_NO, CC.CUST_EMAIL, CC.STATEMENT_TO_EMAIL , CC.BILL_FNAME, CC.BILL_LNAME 
			FROM GTT_REPORTING.EXTERNAL_ID_EQUIP_MAP_EXTRACT EE
			JOIN GTT_REPORTING.CMF_EXTRACT CC ON EE.ACCOUNT_NO = CC.ACCOUNT_NO
			WHERE DATE(EE.EXTRACT_FILE_DATE) = CURRENT_DATE
				AND DATE(CC.EXTRACT_FILE_DATE) = CURRENT_DATE
			AND EE.IS_CURRENT = 1 AND EE.EXTERNAL_ID_TYPE IN (1,9) AND EE.EXTERNAL_ID != '5922251315') EE
	ON (AMS.CLI_NUMBER = EE.ACCOUNT_NO OR AMS.CLI_NUMBER = EE.SUBSCR_NO )
	LEFT JOIN GTT_REPORTING.SWITCH_SUBS_LOCATION SSL
	ON EE.EXTERNAL_ID = SSL.MSISDN 
	
WHERE date(DATE_SOLD) >= to_date('2021-01-01','YYYY-MM-DD')--add_months(date(current_date), -3)
   --AND (SSL.FILE_DT) = date(current_date) -1
--AND AMS.TRANSACTION_TYPE = 'PHONE SALE'
AND AMS.PRD_TYPE = 'PS'
AND VOID_STATUS ='N'

UNION 
----------------------------------------------------
SELECT
    distinct
	AOA.completed as TRANS_DT,
TMP.AREA AS REGION,
--REGEXP_REPLACE(iff (SN.CONTACT_NUMBER_1 IS NOT NULL, SN.CONTACT_NUMBER_1, SN.CONTACT_NUMBER_2), '-|\s+','') PHONE_NUMBER,
EE.EXTERNAL_ID,
 --AOA.serial,
 --AOA.SID,
 --AOA.completed, 
SN.PLAN_SELECTED AS product,
 AOA.APPLICANTS_FIRST_NAME First_Name,
 AOA.APPLICANTS_LAST_NAME Last_Name,
  AOA.EMAIL_ADDRESS AS email,
 'Signed up for Fibre' AS event


 
FROM 
	ATNI_PROD.GTT_REPORTING.VW_GTT_WEBSITE_BLAZE_ONLINE_APPLICATION AOA
	LEFT JOIN 
		ATNI_PROD.GTT_REPORTING.GPON_SERVICE_NOW_ORDER_STATUS SN
	ON AOA.SID = SN.SID 
	LEFT JOIN ATNI_DEV.GTT_REPORTING.blaze_area_upload_tmp tmp
	ON SN.LCP = tmp.LCP
	LEFT JOIN (SELECT EXTERNAL_ID FROM GTT_REPORTING.EXTERNAL_ID_EQUIP_MAP_EXTRACT WHERE DATE(EXTRACT_FILE_DATE) = current_date) EE
	ON REGEXP_REPLACE(iff (SN.CONTACT_NUMBER_1 IS NOT NULL, SN.CONTACT_NUMBER_1, SN.CONTACT_NUMBER_2), '-|\s+','') = EE.EXTERNAL_ID
WHERE 
	date(AOA.completed) >= to_date('2021-01-01','YYYY-MM-DD') --add_months(date(current_date), -3)
	AND DATE(SN.EFFECTIVE_DT)<=CURRENT_DATE 
    AND DATE(SN.EXPIRY_DT)>CURRENT_DATE
    AND EE.EXTERNAL_ID IS NOT null