--Postpaid Mobile DATA
SELECT
	TO_CHAR(Detail.TRANS_DT,'MM/dd/yyyy') AS TRANS_DT,
	TO_CHAR(Detail.TRANS_DT,'Dy') AS TRANS_DAY,
	-- Total
	COUNT(DISTINCT Detail.EXTERNAL_ID) AS TOTAL_SUBS,
	SUM(Detail.PRIMARY_UNITS) / 1048576 AS TOTAL_MBYTES,
	SUM(CASE WHEN Detail.BALANCE_ID = 89 THEN Detail.AMOUNT ELSE 0 END) AS TOTAL_CORE,
	SUM(CASE WHEN Detail.BALANCE_ID = 101 THEN Detail.AMOUNT ELSE 0 END) AS TOTAL_CRLMT,
	-- Local
	COUNT(DISTINCT CASE WHEN upper(Detail.DISPLAY_VALUE) NOT LIKE '%ROAM%' THEN Detail.EXTERNAL_ID END) AS LOCAL_SUBS,
	SUM(CASE WHEN upper(Detail.DISPLAY_VALUE) NOT LIKE '%ROAM%' THEN Detail.PRIMARY_UNITS ELSE 0 END) / 1048576 AS LOCAL_MBYTES,
	SUM(CASE WHEN Detail.BALANCE_ID = 89 AND upper(Detail.DISPLAY_VALUE) NOT LIKE '%ROAM%' THEN Detail.AMOUNT ELSE 0 END) AS LOCAL_CORE,
	SUM(CASE WHEN Detail.BALANCE_ID = 101 AND upper(Detail.DISPLAY_VALUE) NOT LIKE '%ROAM%' THEN Detail.AMOUNT ELSE 0 END) AS LOCAL_CRLMT,
	-- Roaming
	COUNT(DISTINCT CASE WHEN upper(Detail.DISPLAY_VALUE) LIKE '%ROAM%' THEN Detail.EXTERNAL_ID END) AS ROAM_SUBS,
	SUM(CASE WHEN upper(Detail.DISPLAY_VALUE) LIKE '%ROAM%' THEN Detail.PRIMARY_UNITS ELSE 0 END) / 1048576 AS ROAM_MBYTES,
	SUM(CASE WHEN Detail.BALANCE_ID = 89 AND upper(Detail.DISPLAY_VALUE) LIKE '%ROAM%' THEN Detail.AMOUNT ELSE 0 END) AS ROAM_CORE,
	SUM(CASE WHEN Detail.BALANCE_ID = 101 AND upper(Detail.DISPLAY_VALUE) LIKE '%ROAM%' THEN Detail.AMOUNT ELSE 0 END) AS ROAM_CRLMT
FROM
	(SELECT
		CD.MSG_ID,
		CD.MSG_ID2,
		'C' AS TABLE_ID,
		CD.TRANS_DT,
		1 AS SESSION_COUNT,
		CD.EXTERNAL_ID,
		CD.POINT_ORIGIN,
		CD.BALANCE_ID,
		--CD.BALANCE_UNIT_TYPE,
		CD.AUT_ID,
		CD.APPLICATION_ID,
		AV.DISPLAY_VALUE,
		CD.PRIMARY_UNITS,
		CD.AMOUNT / 100 AS AMOUNT,
		CD.CHARGED_AMOUNT / 100 AS CHARGED_AMOUNT,
		CD.PAYMENT_MODE,
		CD.TARIFF_PLAN_OFFER_ID
	FROM CDR_DATA CD
		JOIN AUT_FINAL_VALUES AV
		ON CD.AUT_ID = AV.AUT_ID AND AV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
	WHERE CD.APPLICATION_ID IN (7,10) AND CD.PRIMARY_UNITS > 0 AND CD.BALANCE_ID IS NOT NULL
	AND CD.TARIFF_PLAN_OFFER_ID in (SELECT OFFER_ID FROM OFFER_REF
	WHERE SERVICE_CATEGORY_ID = 4 AND PAYMENT_MODE != 1
	AND RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM OFFER_REF))
	AND CD.TARIFF_PLAN_OFFER_ID NOT IN (11103,11108,11109,11110) AND SUBSTRING(CD.EXTERNAL_ID,1,6) != '592888'
	AND DATE(CD.TRANS_DT) BETWEEN ADD_MONTHS(CURRENT_DATE - DAY(CURRENT_DATE),-1) + 1 AND CURRENT_DATE - DAY(CURRENT_DATE)
	UNION ALL
	SELECT 
		C2.MSG_ID,
		C2.MSG_ID2,
		'B' AS TABLE_ID,
		C2.TRANS_DT,
		CASE WHEN CB.BALANCE_COUNTER = 1 THEN 0 ELSE 0 END AS TEXT_COUNT,
		C2.EXTERNAL_ID,
		C2.POINT_ORIGIN,
		CB.BALANCE_ID,
		--CB.UNIT_TYPE,
		C2.AUT_ID,
		C2.APPLICATION_ID,
		AV.DISPLAY_VALUE,
		CASE WHEN CB.UNIT_TYPE = 3 THEN CB.UNITS ELSE C2.PRIMARY_UNITS - CB2.UNITS END AS PRIMARY_UNITS,
		CASE WHEN NVL(C2.TOTAL_TAX,0) > 0 THEN (CASE WHEN CB.UNIT_TYPE = 1 THEN CB.BALANCE_AMOUNT / 1.14 ELSE 0 END) ELSE CB.BALANCE_AMOUNT END / 100 AS AMOUNT,
		CASE WHEN NVL(CB.BALANCE_AMOUNT,0) > 0 THEN (CASE WHEN CB.UNIT_TYPE = 1 THEN CB.BALANCE_AMOUNT ELSE 0 END) END /100 AS CHARGED_AMOUNT,
		CB.PAYMENT_MODE,
		C2.TARIFF_PLAN_OFFER_ID
	FROM CDR_DATA C2
		JOIN CDR_BALANCE CB
		ON C2.MSG_ID = CB.MSG_ID AND C2.MSG_ID2 = CB.MSG_ID2
		JOIN AUT_FINAL_VALUES AV
		ON C2.AUT_ID = AV.AUT_ID AND AV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
		LEFT JOIN CDR_BALANCE CB2
		ON CB.MSG_ID = CB2.MSG_ID AND CB.MSG_ID2 = CB2.MSG_ID2 AND CB2.UNIT_TYPE = 3 
	WHERE C2.APPLICATION_ID IN (7,10) AND C2.BALANCE_COUNT > 1 --AND NVL(C2.AMOUNT,0) != 0
	AND C2.TARIFF_PLAN_OFFER_ID in (SELECT OFFER_ID FROM OFFER_REF
	WHERE SERVICE_CATEGORY_ID = 4 AND PAYMENT_MODE != 1
	AND RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM OFFER_REF))
	AND C2.TARIFF_PLAN_OFFER_ID NOT IN (11103,11108,11109,11110) AND SUBSTRING(C2.EXTERNAL_ID,1,6) != '592888'
	AND C2.EXTERNAL_ID_TYPE = 1 AND C2.EXTERNAL_ID = C2.POINT_ORIGIN
	AND DATE(C2.TRANS_DT) BETWEEN ADD_MONTHS(CURRENT_DATE - DAY(CURRENT_DATE),-1) + 1 AND CURRENT_DATE - DAY(CURRENT_DATE)) Detail
GROUP BY 1,2 ORDER BY 1