--Landline International Daily Analysis
SELECT 
	TO_CHAR(USG.TRANS_DT,'MM/DD/YYYY') AS CALL_DT,
	TO_CHAR(USG.TRANS_DT,'Dy') AS CALL_DAY,
	--Total
	COUNT(DISTINCT USG.SUBSCR_NO) AS TOTAL_SUBS,
	SUM(USG.CALL_COUNT) AS TOTAL_CALLS,
	SUM(USG.PRIMARY_UNITS) / 60 AS TOTAL_MINUTES,
	SUM(USG.AMOUNT_POSTPAID) AS TOTAL_AMOUNT,
	-- United States of America (USA)
	COUNT(DISTINCT CASE WHEN USG.AUT_ID = 974 THEN USG.SUBSCR_NO END) AS USA_SUBS,
	SUM(CASE WHEN USG.AUT_ID = 974 THEN USG.CALL_COUNT ELSE 0 END) AS USA_CALLS,
	SUM(CASE WHEN USG.AUT_ID = 974 THEN PRIMARY_UNITS ELSE 0 END) /60 AS USA_MINUTES,
	SUM(CASE WHEN USG.AUT_ID = 974 THEN USG.AMOUNT_POSTPAID ELSE 0 END) AS USA_AMOUNT,
	-- Canada
	COUNT(DISTINCT CASE WHEN USG.AUT_ID = 1275 THEN USG.SUBSCR_NO END) AS CANADA_SUBS,
	SUM(CASE WHEN USG.AUT_ID = 1275 THEN USG.CALL_COUNT ELSE 0 END) AS CANADA_CALLS,
	SUM(CASE WHEN USG.AUT_ID = 1275 THEN PRIMARY_UNITS ELSE 0 END) /60 AS CANADA_MINUTES,
	SUM(CASE WHEN USG.AUT_ID = 1275 THEN USG.AMOUNT_POSTPAID ELSE 0 END) AS CANADA_AMOUNT,
	-- UNITED KINGDOM (UK)
	COUNT(DISTINCT CASE WHEN USG.AUT_ID = 1308 THEN USG.SUBSCR_NO END) AS UK_SUBS,
	SUM(CASE WHEN USG.AUT_ID = 1308 THEN USG.CALL_COUNT ELSE 0 END) AS UK_CALLS,
	SUM(CASE WHEN USG.AUT_ID = 1308 THEN PRIMARY_UNITS ELSE 0 END) /60 AS UK_MINUTES,
	SUM(CASE WHEN USG.AUT_ID = 1308 THEN USG.AMOUNT_POSTPAID ELSE 0 END) AS UK_AMOUNT,
	-- Caribbean
	COUNT(DISTINCT CASE WHEN USG.AUT_ID IN (1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN USG.SUBSCR_NO END) AS CARIBBEAN_SUBS,
	SUM(CASE WHEN USG.AUT_ID IN (1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN USG.CALL_COUNT ELSE 0 END) AS CARIBBEAN_CALLS,
	SUM(CASE WHEN USG.AUT_ID IN (1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN PRIMARY_UNITS ELSE 0 END) /60 AS CARIBBEAN_MINUTES,
	SUM(CASE WHEN USG.AUT_ID IN (1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN USG.AMOUNT_POSTPAID ELSE 0 END) AS CARIBBEAN_AMOUNT,
	-- Other countries
	COUNT(DISTINCT CASE WHEN USG.AUT_ID NOT IN (974,1275,1308,1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN USG.SUBSCR_NO END) AS OTHER_SUBS,
	SUM(CASE WHEN USG.AUT_ID NOT IN (974,1275,1308,1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN USG.CALL_COUNT ELSE 0 END) AS OTHER_CALLS,
	SUM(CASE WHEN USG.AUT_ID NOT IN (974,1275,1308,1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN PRIMARY_UNITS ELSE 0 END) /60 AS OTHER_MINUTES,
	SUM(CASE WHEN USG.AUT_ID NOT IN (974,1275,1308,1175,1176,1177,1180,1181,1184,1186,1187,1188,1191,
		1193,1194,1197,1198,1200,1201,1219,1220,1221,1222,1223,1224,1225,1227,1228,5025) 
		THEN USG.AMOUNT_POSTPAID ELSE 0 END) AS OTHER_AMOUNT
FROM (
	SELECT 
		CD.TRANS_DT,
		CD.MSG_ID,
		CD.MSG_ID2,
		'C' AS TABLE_ID,
		1 AS CALL_COUNT,
		CD.EXTERNAL_ID,
		CD.SUBSCR_NO,
		CD.POINT_TARGET,
		CD.BALANCE_ID,
		CD.PRIMARY_UNITS,
		NVL(CD.AMOUNT_POSTPAID,0) / 100 AS AMOUNT_POSTPAID,
		CD.AUT_ID,
		AFV.DISPLAY_VALUE AS AUT_DESCRIPTION,
		AGM.AUT_GROUP_ID,
		AGV.DISPLAY_VALUE AS GROUP_DESC,
		CD.ACCOUNT_CATEGORY,
		EXC.EXC_DESC AS EXCHANGE
	FROM CDR_DATA CD
		JOIN AUT_FINAL_VALUES AFV
		ON AFV.AUT_ID = CD.AUT_ID
		AND AFV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
		LEFT JOIN AUT_GROUP_MAP AGM
		ON AGM.AUT_ID = AFV.AUT_ID
		AND AGM.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_GROUP_MAP)
		LEFT JOIN AUT_GROUP_VALUES AGV
		ON AGV.AUT_GROUP_ID = AGM.AUT_GROUP_ID
		AND AGV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_GROUP_VALUES)
		LEFT JOIN LAND_EXCHANGES EXC
		ON SUBSTRING(CD.EXTERNAL_ID,1,7) = EXC.EXC_CODE
	WHERE CD.EXTERNAL_ID_TYPE IN (9,27) 
	AND CD.APPLICATION_ID = 1
	AND CD.EXTERNAL_ID = CD.POINT_ORIGIN
	AND NVL(CD.PRIMARY_UNITS,0) > 0
	AND CD.BALANCE_ID IS NOT NULL
	AND AGM.AUT_GROUP_ID = 16
	AND DATE(CD.TRANS_DT) BETWEEN ADD_MONTHS(CURRENT_DATE - DAY(CURRENT_DATE),-1) + 1 AND CURRENT_DATE - DAY(CURRENT_DATE)
	UNION ALL 
	SELECT 
		C2.TRANS_DT,
		C2.MSG_ID,
		C2.MSG_ID2,
		'B' AS TABLE_ID,
		CASE WHEN CB.BALANCE_COUNTER = 1 THEN 1 ELSE 0 END AS CALL_COUNT,
		C2.EXTERNAL_ID,
		C2.SUBSCR_NO,
		C2.POINT_TARGET,
		CB.BALANCE_ID,
		(C2.PRIMARY_UNITS / C2.CHARGED_AMOUNT_POSTPAID) * CB.BALANCE_AMOUNT AS PRIMARY_UNITS,
		CASE WHEN CB.UNIT_TYPE = 1 THEN NVL(CB.UNITS,0) ELSE 0 END / 100 AS AMOUNT_POSTPAID,
		C2.AUT_ID,
		AFV.DISPLAY_VALUE AS AUT_DESCRIPTION,
		AGM.AUT_GROUP_ID,
		AGV.DISPLAY_VALUE AS GROUP_DESC,
		C2.ACCOUNT_CATEGORY,
		EXC.EXC_DESC AS EXCHANGE
	FROM CDR_DATA C2
		JOIN CDR_BALANCE CB 
		ON CB.MSG_ID = C2.MSG_ID AND CB.MSG_ID2 = C2.MSG_ID2
		AND DATE(C2.EXPECTED_CUTOFF_DT) BETWEEN ADD_MONTHS(CURRENT_DATE - DAY(CURRENT_DATE),-1) AND CURRENT_DATE - DAY(CURRENT_DATE)+2
		JOIN AUT_FINAL_VALUES AFV
		ON AFV.AUT_ID = C2.AUT_ID
		AND AFV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
		LEFT JOIN AUT_GROUP_MAP AGM
		ON AGM.AUT_ID = AFV.AUT_ID
		AND AGM.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_GROUP_MAP)
		LEFT JOIN AUT_GROUP_VALUES AGV
		ON AGV.AUT_GROUP_ID = AGM.AUT_GROUP_ID
		AND AGV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_GROUP_VALUES)
		LEFT JOIN LAND_EXCHANGES EXC
		ON SUBSTRING(C2.EXTERNAL_ID,1,7) = EXC.EXC_CODE
	WHERE C2.EXTERNAL_ID_TYPE IN (9,27) 
	AND C2.APPLICATION_ID = 1
	AND C2.EXTERNAL_ID = C2.POINT_ORIGIN
	AND NVL(C2.PRIMARY_UNITS,0) > 0
	AND C2.BALANCE_ID IS NULL
	AND AGM.AUT_GROUP_ID = 16
	AND DATE(C2.TRANS_DT) BETWEEN ADD_MONTHS(CURRENT_DATE - DAY(CURRENT_DATE),-1) + 1 AND CURRENT_DATE - DAY(CURRENT_DATE)) USG
GROUP BY 1,2
ORDER BY 1,2