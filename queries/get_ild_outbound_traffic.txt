truncate table RD_ALL_CARRIER_ILDOUT_TRAFFIC;

insert into RD_ALL_CARRIER_ILDOUT_TRAFFIC

 
SELECT
CALL_DATETIME, 
CARRIER, 
ORIG_NETWORK, 
ELAPSED_TIME, 
ORIGINATING_NUMBER, 
TERMINATING_NUMBER, 
CODE_12, 
CODE_11, 
CODE_10,
CODE_9, 
CODE_8, 
CODE_7, 
CODE_6, 
CODE_5, 
CODE_4, 
CODE_3, 
CODE_2, 
CODE_1, 
SWITCH
FROM(
SELECT
CALL_DATETIME,
CARRIER,
ORIG_NETWORK,
ELAPSED_TIME,
ORIGINATING_NUMBER,
SUBSTRING(ORIGINATING_NUMBER,1,6) AS PREFIX,
TERMINATING_NUMBER,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,12)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,12)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,12) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,12)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,12)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,12)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,12)
END AS CODE_12,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,11)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,11)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,11) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,11)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,11)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,11)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,11)
END AS CODE_11,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,10)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,10)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,10) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,10)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,10)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,10)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,10)
END AS CODE_10,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,9)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,9)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,9) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,9)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,9)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,9)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,9)
END AS CODE_9,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,8)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,8)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,8) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,8)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,8)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,8)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,8)
END AS CODE_8,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,7)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,7)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,7) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,7)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,7)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,7)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,7)
END AS CODE_7,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,6)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,6)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,6) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,6)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,6)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,6)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,6)
END AS CODE_6,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,5)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,5)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,5) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,5)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,5)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,5)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,5)
END AS CODE_5,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,4)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,4)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,4) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,4)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,4)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,4)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,4)
END AS CODE_4,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,3)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,3)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,3) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,3)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,3)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,3)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,3)
END AS CODE_3,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,2)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,2)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,2) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,2)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,2)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,2)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,2)
END AS CODE_2,
CASE
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,1)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='01'  and substring(TERMINATING_NUMBER,2,1)='1' then SUBSTRING(TERMINATING_NUMBER,2,1)
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,2)='11'   then SUBSTRING(TERMINATING_NUMBER,1,1) 
WHEN COUNTRY_TYPE='nanp' and substring(TERMINATING_NUMBER,1,1)='1' and substring(TERMINATING_NUMBER,2,1)<>'1' then SUBSTRING(TERMINATING_NUMBER,1,1)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,3)='001' then SUBSTRING(TERMINATING_NUMBER,4,1)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,2)='01' then SUBSTRING(TERMINATING_NUMBER,3,1)
WHEN COUNTRY_TYPE='non-nanp' and substring(TERMINATING_NUMBER,1,1) not in('1','0') then SUBSTRING(TERMINATING_NUMBER,1,1)
END AS CODE_1,
SWITCH

FROM(
SELECT
CALL_DATETIME,
CARRIER,
ORIG_NETWORK,
ELAPSED_TIME,
ORIGINATING_NUMBER,
REPLACE(TERMINATING_NUMBER,'+','') as TERMINATING_NUMBER,
case
			when (substring(trim(terminating_number), 1, 3) = '001') and (substring(terminating_number, 4, 1)='1') then 'nanp'
			when (substring( trim(terminating_number), 1, 1)='1') then 'nanp'
		    else
				'non-nanp'
					 
		end as COUNTRY_TYPE,
		SWITCH

FROM(
SELECT
CALL_DATETIME,
CARRIER,
ORIG_NETWORK,
ELAPSED_TIME,
ORIGINATING_NUMBER,
CASE 
WHEN SUBSTRING(REPLACE(TERMINATING_NUMBER,'+',''),1,3) 
IN( SELECT PREFIX FROM RD_ILD_OUT_PREFIX) THEN SUBSTRING(REPLACE(TERMINATING_NUMBER,'+',''),4,LENGTH(TERMINATING_NUMBER)-3) ELSE TERMINATING_NUMBER
END AS TERMINATING_NUMBER,
SWITCH
FROM(
SELECT 
            CDR.CONNECT_DATETIME AS CALL_DATETIME, CLLI.CARRIER_CODE AS CARRIER,
            
             CASE 
                 WHEN 
					  ((SUBSTRING(ORIGINATING_NUMBER, 1, 6) IN (SELECT PREFIX_LONG FROM DIGICEL_PREFIXES) AND LENGTH(ORIGINATING_NUMBER)=10)
					  OR (SUBSTRING(ORIGINATING_NUMBER, 1, 3) IN (SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES) AND LENGTH(ORIGINATING_NUMBER)=7)
					  OR (SUBSTRING(ORIGINATING_NUMBER, 4, 6) IN (SELECT PREFIX_LONG FROM DIGICEL_PREFIXES) AND LENGTH(ORIGINATING_NUMBER)=13)) THEN  'DIGICEL'
                      
				  WHEN ((SUBSTRING(ORIGINATING_NUMBER, 1, 6) IN (SELECT PREFIX_LONG FROM GTT_PREFIXES) AND LENGTH(ORIGINATING_NUMBER)=10)
					  OR (SUBSTRING(ORIGINATING_NUMBER, 1, 3) IN (SELECT PREFIX_SHORT FROM GTT_PREFIXES) AND LENGTH(ORIGINATING_NUMBER)=7)
					  OR (SUBSTRING(ORIGINATING_NUMBER, 4, 6) IN (SELECT PREFIX_LONG FROM GTT_PREFIXES) AND LENGTH(ORIGINATING_NUMBER)=13)) THEN  'GTT_CELL'
				                    
				  WHEN
                      ((SUBSTRING(ORIGINATING_NUMBER, 1, 1) <> '6'  AND SUBSTRING(ORIGINATING_NUMBER, 1, 3) NOT IN 
                       (SELECT PREFIX_SHORT FROM GPON_PREFIXES UNION SELECT PREFIX_SHORT FROM GTT_PREFIXES UNION SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES)  AND LENGTH(ORIGINATING_NUMBER)='7')
                       
                       
                     OR (SUBSTRING(ORIGINATING_NUMBER, 1, 3)='592' AND SUBSTRING(ORIGINATING_NUMBER, 4, 1) <> '6'  AND SUBSTRING(ORIGINATING_NUMBER, 4, 3) NOT IN
                        (SELECT PREFIX_SHORT FROM GPON_PREFIXES UNION SELECT PREFIX_SHORT FROM GTT_PREFIXES UNION SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES)
                        AND LENGTH(ORIGINATING_NUMBER)='10')
                         
                       
                     OR (SUBSTRING(ORIGINATING_NUMBER, 1, 6)='592592' AND SUBSTRING(ORIGINATING_NUMBER, 7, 1) <> '6' AND SUBSTRING(ORIGINATING_NUMBER, 7, 3) NOT IN
                        (SELECT PREFIX_SHORT FROM GPON_PREFIXES UNION SELECT PREFIX_SHORT FROM GTT_PREFIXES UNION SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES) AND LENGTH(ORIGINATING_NUMBER)='13')) 
  
  
					 AND (SUBSTRING(ORIGINATING_NUMBER,1,6) NOT IN (SELECT PREFIX_LONG FROM GPON_PREFIXES)) AND (SUBSTRING(ORIGINATING_NUMBER,4,6) NOT IN (SELECT PREFIX_LONG FROM GPON_PREFIXES))  THEN 'GTT_LAND'

  
    
				  WHEN
				       ((SUBSTRING(ORIGINATING_NUMBER,1,6) IN (SELECT PREFIX_LONG FROM GPON_PREFIXES)) OR  (SUBSTRING(ORIGINATING_NUMBER,4,6) IN (SELECT PREFIX_LONG FROM GPON_PREFIXES))) THEN 'GPON'

				  ELSE
                     'UNKNOWN'
             
             END AS ORIG_NETWORK,
            
            
            ELAPSED_TIME,
			ORIGINATING_NUMBER,
			REPLACE(TERMINATING_NUMBER,'d','') AS TERMINATING_NUMBER,
			'GENBAND' AS SWITCH
        FROM
            GENBAND_CDR CDR, DMS300_CDR_CLLI_MAPPINGS CLLI
        WHERE
               DATE(CONNECT_DATETIME) BETWEEN '${START_DATE}' AND '${END_DATE}'
              
               AND CARRIER_CODE <> ''
               AND CARRIER_CODE <> 'AIR'
			   AND (
	                 (ltrim(SUBSTRING(trunkID2, 3, 3))::NUMERIC = clli.clli) 
			         OR (ltrim(SUBSTRING(trunkID1, 3, 3))::NUMERIC = clli.clli AND TRUNKID1 LIKE '2%') 
		          )

             --  AND ( (Timing_Indicator = 0) or (Timing_Indicator is null))
			   
UNION ALL
SELECT 
            CALL_START_DATETIME AS CALL_DATETIME,CARRIER,
            
            
             CASE 
  					WHEN ((SUBSTRING(CALLING_PARTY_NUMBER, 1, 6) IN (SELECT PREFIX_LONG FROM DIGICEL_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)=10 ) 
					  OR (SUBSTRING(CALLING_PARTY_NUMBER, 1, 3) IN (SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)=7)
					  OR (SUBSTRING(CALLING_PARTY_NUMBER, 4, 6) IN (SELECT PREFIX_LONG FROM DIGICEL_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)=13)) THEN  'DIGICEL'
                      
                      
				    WHEN ((SUBSTRING(CALLING_PARTY_NUMBER, 1, 6) IN (SELECT PREFIX_LONG FROM GTT_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)=10)
					  OR (SUBSTRING(CALLING_PARTY_NUMBER, 1, 3) IN (SELECT PREFIX_SHORT FROM GTT_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)=7)
					  OR (SUBSTRING(CALLING_PARTY_NUMBER, 4, 6) IN (SELECT PREFIX_LONG FROM GTT_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)=13)) THEN  'GTT_CELL'
				  
  
                    WHEN
                      ((SUBSTRING(CALLING_PARTY_NUMBER, 1, 1) <> '6' AND SUBSTRING(CALLING_PARTY_NUMBER, 1, 3) NOT IN 
                       (SELECT PREFIX_SHORT FROM GPON_PREFIXES UNION SELECT PREFIX_SHORT FROM GTT_PREFIXES UNION SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)='7')
                       
                       
                     OR (SUBSTRING(CALLING_PARTY_NUMBER, 1, 3)='592' AND SUBSTRING(CALLING_PARTY_NUMBER, 4, 1) <> '6' AND SUBSTRING(CALLING_PARTY_NUMBER, 7, 3) NOT IN
                        (SELECT PREFIX_SHORT FROM GPON_PREFIXES UNION SELECT PREFIX_SHORT FROM GTT_PREFIXES UNION SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)='10')
                       
                       
                     OR (SUBSTRING(CALLING_PARTY_NUMBER, 1, 6)='592592' AND SUBSTRING(CALLING_PARTY_NUMBER, 7, 1) <> '6' AND SUBSTRING(CALLING_PARTY_NUMBER, 7, 3) NOT IN
                        (SELECT PREFIX_SHORT FROM GPON_PREFIXES UNION SELECT PREFIX_SHORT FROM GTT_PREFIXES UNION SELECT PREFIX_SHORT FROM DIGICEL_PREFIXES) AND LENGTH(CALLING_PARTY_NUMBER)='13')) 
  
  
					 AND (SUBSTRING(CALLING_PARTY_NUMBER,1,6) ) NOT IN (SELECT PREFIX_LONG FROM GPON_PREFIXES) AND (SUBSTRING(CALLING_PARTY_NUMBER,4,6) NOT IN (SELECT PREFIX_LONG FROM GPON_PREFIXES))
					 THEN 'GTT_LAND'
				  WHEN
				       ((SUBSTRING(CALLING_PARTY_NUMBER,1,6) IN (SELECT PREFIX_LONG FROM GPON_PREFIXES)) OR  (SUBSTRING(CALLING_PARTY_NUMBER,4,6) IN (SELECT PREFIX_LONG FROM GPON_PREFIXES) )) THEN 'GPON'
				  ELSE
                     'UNKNOWN'
             
             END AS ORIG_NETWORK,
            
            
            DURATION AS ELAPSED_TIME,
			CALLING_PARTY_NUMBER AS ORIGINATING_NUMBER,
			REPLACE(CALLED_PARTY_NUMBER,'d','') AS TERMINATING_NUMBER,
			'AIRSPAN' AS SWITCH
			
        FROM
            AIRSPAN_CDR CDR LEFT JOIN AIRSPAN_CDR_IP_MAPPINGS CLLI ON SEND_GATEWAY_IP=IP
        WHERE
            DATE(CALL_START_DATETIME) BETWEEN '${START_DATE}' AND '${END_DATE}'
                AND SEND_GATEWAY_IP IN (SELECT 
                IP
            FROM
                AIRSPAN_CDR_IP_MAPPINGS)
                
       ) AS Q
     ) AS Q2
   ) AS Q3
   )AS Q4

