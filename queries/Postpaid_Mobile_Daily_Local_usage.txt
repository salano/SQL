--Postpaid Mobile Local Usage
SELECT
	TO_CHAR(Detail.TRANS_DT,'mm/dd/yyyy') AS CALL_DT,
	TO_CHAR(Detail.TRANS_DT,'Dy') AS CALL_DAY,
	COUNT(DISTINCT Detail.EXTERNAL_ID) AS TOT_SUBS,
	SUM(Detail.CALL_COUNT) AS TOT_CALLS,
	SUM(Detail.PRIMARY_UNITS) / 60 AS TOT_MINUTES,
	SUM(CASE WHEN Detail.BALANCE_ID = 90 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS TOT_PLAN_MIN,
	SUM(CASE WHEN Detail.BALANCE_ID = 101 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS TOT_CRLMT_MIN,
	SUM(CASE WHEN Detail.BALANCE_ID NOT IN (90,101) THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS TOT_OTHER_MIN,
	SUM(CASE WHEN Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 THEN Detail.AMOUNT ELSE 0 END) AS TOT_AMOUNT,
	SUM(CASE WHEN Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID = 101 THEN Detail.AMOUNT ELSE 0 END) AS TOT_CRLMT,
	SUM(CASE WHEN Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID != 101 THEN Detail.AMOUNT ELSE 0 END) AS TOT_OTHER,
	-- Landline
	COUNT(DISTINCT CASE WHEN Detail.DESCRIPTION = 'GTT Land' THEN Detail.EXTERNAL_ID END) AS GTTLAND_SUBS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' THEN Detail.CALL_COUNT ELSE 0 END) AS GTTLAND_CALLS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTLAND_MINUTES,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' AND Detail.BALANCE_ID = 90 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTLAND_PLAN_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' AND Detail.BALANCE_ID = 101 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTLAND_CRLMT_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' AND Detail.BALANCE_ID NOT IN (90,101) THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTLAND_OTHER_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 THEN Detail.AMOUNT ELSE 0 END) AS GTTLAND_AMOUNT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID = 101 THEN Detail.AMOUNT ELSE 0 END) AS GTTLAND_CRLMT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Land' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID != 101 THEN Detail.AMOUNT ELSE 0 END) AS GTTLAND_OTHER,
	-- GTT Cell
	COUNT(DISTINCT CASE WHEN Detail.DESCRIPTION = 'GTT Cell' THEN Detail.EXTERNAL_ID END) AS GTTCELL_SUBS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' THEN Detail.CALL_COUNT ELSE 0 END) AS GTTCELL_CALLS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTCELL_MINUTES,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' AND Detail.BALANCE_ID = 90 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTCELL_PLAN_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' AND Detail.BALANCE_ID = 101 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTCELL_CRLMT_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' AND Detail.BALANCE_ID NOT IN (90,101) THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GTTCELL_OTHER_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 THEN Detail.AMOUNT ELSE 0 END) AS GTTCELL_AMOUNT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID = 101 THEN Detail.AMOUNT ELSE 0 END) AS GTTCELL_CRLMT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GTT Cell' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID != 101 THEN Detail.AMOUNT ELSE 0 END) AS GTTCELL_OTHER,
	-- Digicel
	COUNT(DISTINCT CASE WHEN Detail.DESCRIPTION = 'Digicel' THEN Detail.EXTERNAL_ID END) AS DIGICEL_SUBS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' THEN Detail.CALL_COUNT ELSE 0 END) AS DIGICEL_CALLS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS DIGICEL_MINUTES,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' AND Detail.BALANCE_ID = 90 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS DIGICEL_PLAN_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' AND Detail.BALANCE_ID = 101 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS DIGICEL_CRLMT_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' AND Detail.BALANCE_ID NOT IN (90,101) THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS DIGICEL_OTHER_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 THEN Detail.AMOUNT ELSE 0 END) AS DIGICEL_AMOUNT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID = 101 THEN Detail.AMOUNT ELSE 0 END) AS DIGICEL_CRLMT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'Digicel' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID != 101 THEN Detail.AMOUNT ELSE 0 END) AS DIGICEL_OTHER,
	--GPON
	COUNT(DISTINCT CASE WHEN Detail.DESCRIPTION = 'GPON' THEN Detail.EXTERNAL_ID END) AS GPON_SUBS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' THEN Detail.CALL_COUNT ELSE 0 END) AS GPON_CALLS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GPON_MINUTES,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' AND Detail.BALANCE_ID = 90 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GPON_PLAN_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' AND Detail.BALANCE_ID = 101 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GPON_CRLMT_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' AND Detail.BALANCE_ID NOT IN (90,101) THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS GPON_OTHER_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 THEN Detail.AMOUNT ELSE 0 END) AS GPON_AMOUNT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID = 101 THEN Detail.AMOUNT ELSE 0 END) AS GPON_CRLMT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'GPON' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID != 101 THEN Detail.AMOUNT ELSE 0 END) AS GPON_OTHER,
	--Closed User Group (CUG)
	COUNT(DISTINCT CASE WHEN Detail.DESCRIPTION = 'CUG' THEN Detail.EXTERNAL_ID END) AS CUG_SUBS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' THEN Detail.CALL_COUNT ELSE 0 END) AS CUG_CALLS,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS CUG_MINUTES,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' AND Detail.BALANCE_ID = 90 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS CUG_PLAN_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' AND Detail.BALANCE_ID = 101 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS CUG_CRLMT_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' AND Detail.BALANCE_ID NOT IN (90,101) THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS CUG_OTHER_MIN,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 THEN Detail.AMOUNT ELSE 0 END) AS CUG_AMOUNT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID = 101 THEN Detail.AMOUNT ELSE 0 END) AS CUG_CRLMT,
	SUM(CASE WHEN Detail.DESCRIPTION = 'CUG' AND Detail.UNIT_TYPE = 1 AND Detail.TOTAL_TAX != 0 AND Detail.BALANCE_ID != 101 THEN Detail.AMOUNT ELSE 0 END) AS CUG_OTHER
FROM (
	SELECT 
		CASE WHEN AGM.AUT_GROUP_ID = 20 THEN 'GTT Cell'
			WHEN AGM.AUT_GROUP_ID = 21 THEN 'Digicel'
			WHEN AGM.AUT_GROUP_ID IN (22,45) THEN 'GTT Land'
			WHEN AGM.AUT_GROUP_ID = 53 THEN 'GPON'
			WHEN AGM.AUT_GROUP_ID = 54 THEN 'CUG'
			ELSE 'Unknown' END AS DESCRIPTION,
		AGM.AUT_GROUP_ID,
		CASE WHEN CD.BALANCE_ID = 89 THEN 'Core' 
			WHEN CD.BALANCE_ID = 101 THEN 'CrLimit'
			WHEN CD.BALANCE_ID NOT IN (89,101) AND BF.UNIT_TYPE = 1 THEN 'Promo' 
			WHEN CD.BALANCE_ID NOT IN (89,101) AND BF.UNIT_TYPE = 2 THEN 'Free Seconds' 
			WHEN CD.BALANCE_ID NOT IN (89,101) AND BF.UNIT_TYPE = 3 THEN 'Octet' 
			WHEN CD.BALANCE_ID NOT IN (89,101) AND BF.UNIT_TYPE = 4 THEN 'SMS' 
			WHEN CD.BALANCE_ID NOT IN (89,101) AND BF.UNIT_TYPE = 5001 THEN 'Quantity' 
			ELSE 'Unknown' END AS BALANCE_TYPE,
		'C' AS TABLE_ID,
		CD.MSG_ID,
		CD.MSG_ID2,
		CD.TRANS_DT,
		1 AS CALL_COUNT,
		CD.EXTERNAL_ID,
		CD.POINT_ORIGIN,
		CD.POINT_TARGET,
		CD.BALANCE_ID,
		BF.UNIT_TYPE,
		CD.AUT_ID,
		AV.DISPLAY_VALUE,
		CD.PRIMARY_UNITS,
		NVL(AMOUNT_POSTPAID,0) / 100 AS AMOUNT,
		NVL(TOTAL_TAX_POSTPAID,0) / 100 AS TOTAL_TAX,
		NVL(CD.CHARGED_AMOUNT_POSTPAID,0) / 100 AS CHARGED_AMOUNT
		FROM CDR_DATA CD
			JOIN AUT_FINAL_VALUES AV
			ON CD.AUT_ID = AV.AUT_ID AND AV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
			LEFT JOIN BALANCE_REF BF
			ON CD.BALANCE_ID = BF.BALANCE_ID AND BF.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM BALANCE_REF)
			JOIN AUT_GROUP_MAP AGM
			ON AGM.AUT_ID = CD.AUT_ID
			AND AGM.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_GROUP_MAP)
		WHERE CD.APPLICATION_ID = 1 AND CD.PRIMARY_UNITS > 0 AND NVL(CD.AMOUNT,0) > 0 AND NVL(CD.PAYMENT_MODE,0) != 1
		AND CD.EXTERNAL_ID_TYPE = 1 AND NVL(CD.AMOUNT,0) > 0 AND CD.BALANCE_ID IS NOT NULL
		AND CD.EXTERNAL_ID != CD.POINT_TARGET AND substring(NVL(CD.POINT_TARGET,' '),1,3) = '592'
		AND AGM.AUT_GROUP_ID NOT IN (18,40)
		AND DATE(trans_dt) BETWEEN ADD_MONTHS(CURRENT_DATE - DAY(CURRENT_DATE),-1) + 1 AND CURRENT_DATE - DAY(CURRENT_DATE)
		--AND DATE(CD.TRANS_DT) BETWEEN ${start_dt}::DATE AND ${end_dt}::DATE
	UNION ALL
	SELECT 
		CASE WHEN AGM.AUT_GROUP_ID = 20 THEN 'GTT Cell'
			WHEN AGM.AUT_GROUP_ID = 21 THEN 'Digicel'
			WHEN AGM.AUT_GROUP_ID IN (22,45) THEN 'GTT Land'
			WHEN AGM.AUT_GROUP_ID = 53 THEN 'GPON'
			WHEN AGM.AUT_GROUP_ID = 54 THEN 'CUG'
			ELSE 'Unknown' END AS DESCRIPTION,
		AGM.AUT_GROUP_ID,
		CASE WHEN CB.BALANCE_ID = 89 THEN 'Core' 
			WHEN CB.BALANCE_ID = 101 THEN 'CrLimit'
			WHEN CB.BALANCE_ID NOT IN (89,101) AND CB.UNIT_TYPE = 1 THEN 'Promo' 
			WHEN CB.BALANCE_ID NOT IN (89,101) AND CB.UNIT_TYPE = 2 THEN 'Free Seconds' 
			WHEN CB.BALANCE_ID NOT IN (89,101) AND CB.UNIT_TYPE = 3 THEN 'Octet' 
			WHEN CB.BALANCE_ID NOT IN (89,101) AND CB.UNIT_TYPE = 4 THEN 'SMS' 
			WHEN CB.BALANCE_ID NOT IN (89,101) AND CB.UNIT_TYPE = 5001 THEN 'Quantity' 
			ELSE 'Unknown' END AS BALANCE_TYPE,
		'B' AS TABLE_ID,
		CB.MSG_ID,
		CB.MSG_ID2,
		C2.TRANS_DT,
		CASE WHEN CB.BALANCE_COUNTER = 1 THEN 1 ELSE 0 END AS CALL_COUNT,
		C2.EXTERNAL_ID,
		C2.POINT_ORIGIN,
		C2.POINT_TARGET,
		CB.BALANCE_ID,
		CB.UNIT_TYPE,
		C2.AUT_ID,
		AV.DISPLAY_VALUE,
		CASE WHEN CB.UNIT_TYPE = 2 THEN CB.UNITS ELSE C2.PRIMARY_UNITS - CB2.UNITS END AS PRIMARY_UNITS,
		CASE WHEN NVL(C2.TOTAL_TAX_POSTPAID,0) > 0 THEN (CASE WHEN C2.REFUND_FLAG != 'Y' 
				THEN (CASE WHEN CB.UNIT_TYPE = 1 THEN CB.BALANCE_AMOUNT / 1.14 ELSE 0 END) 
				ELSE (0 - CB.BALANCE_AMOUNT) / 1.14 END) 
			ELSE (CASE WHEN C2.REFUND_FLAG != 'Y' THEN CB.BALANCE_AMOUNT ELSE 0 - CB.BALANCE_AMOUNT END) END / 100 AS AMOUNT,
		NVL(C2.TOTAL_TAX_POSTPAID,0) AS TOTAL_TAX,
		CASE WHEN NVL(CB.BALANCE_AMOUNT,0) > 0 THEN 
			(CASE WHEN C2.REFUND_FLAG != 'Y' THEN (CASE WHEN CB.UNIT_TYPE = 1 THEN CB.BALANCE_AMOUNT ELSE 0 END) 
			ELSE 0 - CB.BALANCE_AMOUNT END) END /100 AS CHARGED_AMOUNT
		FROM CDR_DATA C2
			JOIN CDR_BALANCE CB
			ON C2.MSG_ID = CB.MSG_ID AND C2.MSG_ID2 = CB.MSG_ID2
			JOIN AUT_FINAL_VALUES AV
			ON C2.AUT_ID = AV.AUT_ID AND AV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
			JOIN CDR_BALANCE CB2
			ON CB.MSG_ID = CB2.MSG_ID AND CB.MSG_ID2 = CB2.MSG_ID2 AND CB2.UNIT_TYPE = 2
			JOIN AUT_GROUP_MAP AGM
			ON AGM.AUT_ID = C2.AUT_ID
			AND AGM.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_GROUP_MAP)
		WHERE C2.APPLICATION_ID = 1 AND C2.BALANCE_ID IS NULL AND NVL(CB.PAYMENT_MODE,0) != 1
		AND C2.EXTERNAL_ID_TYPE = 1 AND C2.PRIMARY_UNITS > 0 AND NVL(C2.AMOUNT,0) > 0
		AND C2.EXTERNAL_ID != C2.POINT_TARGET AND substring(NVL(C2.POINT_TARGET,' '),1,3) = '592'
		AND AGM.AUT_GROUP_ID NOT IN (18,40)
		AND DATE(C2.TRANS_DT) BETWEEN ADD_MONTHS(CURRENT_DATE - DAY(CURRENT_DATE),-1) + 1 AND CURRENT_DATE - DAY(CURRENT_DATE)
		--AND DATE(C2.TRANS_DT) BETWEEN ${start_dt}::DATE AND ${end_dt}::DATE
		) Detail
GROUP BY 1,2
ORDER BY 1,2
;
