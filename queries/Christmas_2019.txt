--Christmas 2019
-- Minutes of USE [All Services]
SELECT
	CURRENT_DATE-1 AS TRANS_DT,
	Detail.EXTERNAL_ID,
	Detail.SUBSCR_NO,
	Detail.ACCOUNT_NO,
	'Originating Calls' AS BILL_REF_NO,
	SUM(Detail.AMOUNT) / 100 AS TRANS_AMT,
	SUM(Detail.CHARGED_AMOUNT) / 100 AS BILL_AMT,
	'Minutes of USE' AS ACTIVITY_TYPE,
	Detail.SERVICE_TYPE,
	--SUM(Detail.PRIMARY_UNITS) / 60 AS TOTAL_MINS,
	--SUM(CASE WHEN DATE(Detail.TRANS_DT) BETWEEN ${begin_dt}::Date AND CURRENT_DATE-2 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 60 AS PREV_MINS,
	--(SUM(Detail.PRIMARY_UNITS) - SUM(CASE WHEN DATE(Detail.TRANS_DT) BETWEEN ${begin_dt}::Date AND CURRENT_DATE-2 THEN Detail.PRIMARY_UNITS ELSE 0 END)) / 60 AS CURRENT_MINS,
	--SUM(Detail.PRIMARY_UNITS) / 3600 AS TOTAL_ENTRIES,
	--SUM(CASE WHEN DATE(Detail.TRANS_DT) BETWEEN ${begin_dt}::Date AND CURRENT_DATE-2 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 3600 AS PREV_ENTRIES,
	--(SUM(Detail.PRIMARY_UNITS) / 3600) - (SUM(CASE WHEN DATE(Detail.TRANS_DT) BETWEEN ${begin_dt}::Date AND CURRENT_DATE-2 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 3600) AS CURRENT_ENTRIES,
	FLOOR(SUM(Detail.PRIMARY_UNITS) / 3600) - FLOOR(SUM(CASE WHEN DATE(Detail.TRANS_DT) BETWEEN ${begin_dt}::Date AND CURRENT_DATE-2 THEN Detail.PRIMARY_UNITS ELSE 0 END) / 3600) AS ENTRIES
	
FROM
	(SELECT
		'C' AS TABLE_ID,
		CD.TRANS_DT,
		1 AS CALL_COUNT,
		CD.EXTERNAL_ID,
		CD.SUBSCR_NO,
		CD.ACCOUNT_NO,
		CASE WHEN CD.EXTERNAL_ID_TYPE = 1 AND CD.PAYMENT_MODE = 1 THEN 'Prepaid Mobile'
			WHEN CD.EXTERNAL_ID_TYPE = 1 AND NVL(CD.PAYMENT_MODE,0) != 1 THEN 'Postpaid Mobile'
			WHEN CD.EXTERNAL_ID_TYPE = 9 THEN 'Landline'
			WHEN CD.EXTERNAL_ID_TYPE = 37 THEN 'GPON'
			ELSE 'Unknown' END AS SERVICE_TYPE,
		CD.POINT_ORIGIN,
		CD.POINT_TARGET,
		CD.PRIMARY_UNITS,
		CD.BALANCE_ID,
		CD.AMOUNT,
		CD.TOTAL_TAX,
		CD.CHARGED_AMOUNT,
		CD.PAYMENT_MODE
	FROM CDR_DATA CD
	WHERE DATE(CD.TRANS_DT) BETWEEN ${begin_dt} AND CURRENT_DATE-1
	AND NVL(CD.BALANCE_COUNT,0) = 1
	AND CD.APPLICATION_ID = 1
	AND CD.EXTERNAL_ID_TYPE IN (1,9,37)
	AND CD.EXTERNAL_ID = CD.POINT_ORIGIN
	AND CD.PRIMARY_UNITS > 0
	AND (CD.PAYMENT_MODE = 1 OR (NVL(CD.PAYMENT_MODE,0) != 1 AND CD.ACCOUNT_CATEGORY = 10))
	UNION ALL
	SELECT 
		'B' AS TABLE_ID,
		C2.TRANS_DT,
		CASE WHEN CB.BALANCE_COUNTER = 1 THEN 1 ELSE 0 END AS CALL_COUNT,
		C2.EXTERNAL_ID,
		C2.SUBSCR_NO,
		C2.ACCOUNT_NO,
		CASE WHEN C2.EXTERNAL_ID_TYPE = 1 AND CB.PAYMENT_MODE = 1 THEN 'Prepaid Mobile'
			WHEN C2.EXTERNAL_ID_TYPE = 1 AND NVL(CB.PAYMENT_MODE,0) != 1 THEN 'Postpaid Mobile'
			WHEN C2.EXTERNAL_ID_TYPE = 9 THEN 'Landline'
			WHEN C2.EXTERNAL_ID_TYPE = 37 THEN 'GPON'
			ELSE 'Unknown' END AS SERVICE_TYPE,
		C2.POINT_ORIGIN,
		C2.POINT_TARGET,
		CASE WHEN DATE(C2.TRANS_DT) < '20180429' THEN ROUND((CB.BALANCE_AMOUNT / CASE WHEN CB.UNIT_TYPE = 1 THEN 30.16 ELSE 26.45 END) * 0.60) 
		ELSE ROUND((CB.BALANCE_AMOUNT / CASE WHEN CB.UNIT_TYPE = 1 THEN 32.00 ELSE 28.07 END) * 0.60) END AS PRIMARY_UNITS,
		CB.BALANCE_ID,
		CASE WHEN NVL(C2.TOTAL_TAX,0) > 0 THEN (CASE WHEN C2.REFUND_FLAG != 'Y' THEN (CASE WHEN CB.UNIT_TYPE = 1 THEN CB.BALANCE_AMOUNT / 1.14 ELSE 0 END) ELSE (0 - CB.BALANCE_AMOUNT) / 1.14 END) ELSE (CASE WHEN C2.REFUND_FLAG != 'Y' THEN CB.BALANCE_AMOUNT ELSE 0 - CB.BALANCE_AMOUNT END) END AS AMOUNT,
		CASE WHEN nvl(C2.TOTAL_TAX,0) > 0 THEN (CASE WHEN CB.UNIT_TYPE = 1 THEN (CB.BALANCE_AMOUNT - (CB.BALANCE_AMOUNT / 1.14)) ELSE 0 END) ELSE 0 END AS TOTAL_TAX,
		CASE WHEN NVL(CB.BALANCE_AMOUNT,0) > 0 THEN (CASE WHEN C2.REFUND_FLAG != 'Y' THEN (CASE WHEN CB.UNIT_TYPE = 1 THEN CB.BALANCE_AMOUNT ELSE 0 END) ELSE 0 - CB.BALANCE_AMOUNT END) END AS CHARGED_AMOUNT,
		CB.PAYMENT_MODE
	FROM CDR_DATA C2
		JOIN CDR_BALANCE CB
		ON C2.MSG_ID = CB.MSG_ID AND C2.MSG_ID2 = CB.MSG_ID2
	WHERE C2.APPLICATION_ID = 1 AND NVL(C2.BALANCE_COUNT,0) > 1
	AND C2.EXTERNAL_ID_TYPE IN (1,9,37)
	AND C2.EXTERNAL_ID = C2.POINT_ORIGIN
	AND (C2.PAYMENT_MODE = 1 OR (NVL(C2.PAYMENT_MODE,0) != 1 AND C2.ACCOUNT_CATEGORY = 10))
	AND DATE(C2.TRANS_DT) BETWEEN ${begin_dt} AND CURRENT_DATE-1) Detail
GROUP BY 1,2,3,4,5,8,9
--HAVING SUM(Detail.PRIMARY_UNITS) > 3600
HAVING ENTRIES > 0
ORDER BY 1,2,3,4,5
;

-- Christmas promotion recharges
SELECT
	RH.RECHARGE_DATE_TIME AS TRANS_DT,
	EIEM.EXTERNAL_ID,
	RH.SUBSCR_NO,
	RH.ACCOUNT_NO,
	SUBSTRING(NVL(RH.RECHARGE_COMMMENT,' '),1,30) AS BILL_REF_NO,
	RHB.AMOUNT / -100 AS TRANS_AMT,
	0 AS BILL_AMT,
	CASE WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER IN ('cbs_owner','ussd') THEN 'CARD RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'EMIDA' THEN 'EMIDA RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'EMIDA' THEN 'EMIDA RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'mmguser' THEN 'MMG RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'mms' THEN 'MMS RECHARGE'
		ELSE 'OTHER RECHARGE' END AS ACTIVITY_TYPE,
	'Mobile' AS SERVICE_TYPE,
	--Removed extra 2 entries for MMG 
	--FLOOR(RHB.AMOUNT / -100000) + CASE WHEN RH.RECHARGE_USER = 'mmguser' THEN 2 ELSE 0 END AS ENTRIES
	FLOOR(RHB.AMOUNT / -100000) AS ENTRIES
FROM RECHARGE_HISTORY RH
	JOIN RECHARGE_HISTORY_BALANCE RHB
	ON RH.RECHARGE_ID = RHB.RECHARGE_ID AND RH.RECHARGE_ID2 = RHB.RECHARGE_ID2
	LEFT JOIN (
		SELECT DISTINCT SUBSCR_NO, EXTERNAL_ID
			FROM EXTERNAL_ID_EQUIP_MAP
			WHERE DATE(EFFECTIVE_DT) <= CURRENT_DATE AND DATE(EXPIRY_DT) > CURRENT_DATE
			AND EXTERNAL_ID_TYPE = 1 AND IS_CURRENT = 1) EIEM
	ON RH.SUBSCR_NO = EIEM.SUBSCR_NO
WHERE DATE(RH.RECHARGE_DATE_TIME) = CURRENT_DATE-1
AND SUBSTRING(NVL(RH.RECHARGE_COMMMENT,' '),1,8) != 'inswitch' AND nvl(RHB.AMOUNT,0) < -99999
AND SUBSTRING(EIEM.EXTERNAL_ID,1,4) = '5926'
AND RHB.BALANCE_ID = 89 AND RHB.PAYMENT_MODE = 1
;
-- Christmas promotion recharges
SELECT
	RH.RECHARGE_DATE_TIME AS TRANS_DT,
	EIEM.EXTERNAL_ID,
	RH.SUBSCR_NO,
	RH.ACCOUNT_NO,
	SUBSTRING(NVL(RH.RECHARGE_COMMMENT,' '),1,30) AS BILL_REF_NO,
	RHB.AMOUNT / -100 AS TRANS_AMT,
	0 AS BILL_AMT,
	CASE WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER IN ('cbs_owner','ussd') THEN 'CARD RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'EMIDA' THEN 'EMIDA RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'EMIDA' THEN 'EMIDA RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'mmguser' THEN 'MMG RECHARGE'
		WHEN RHB.AMOUNT < 0 AND RH.RECHARGE_USER = 'mms' THEN 'MMS RECHARGE'
		ELSE 'OTHER RECHARGE' END AS ACTIVITY_TYPE,
	'Mobile' AS SERVICE_TYPE,
	--Removed extra 2 entries for MMG 
	--FLOOR(RHB.AMOUNT / -100000) + CASE WHEN RH.RECHARGE_USER = 'mmguser' THEN 2 ELSE 0 END AS ENTRIES
	FLOOR(RHB.AMOUNT / -100000) AS ENTRIES
FROM RECHARGE_HISTORY RH
	JOIN RECHARGE_HISTORY_BALANCE RHB
	ON RH.RECHARGE_ID = RHB.RECHARGE_ID AND RH.RECHARGE_ID2 = RHB.RECHARGE_ID2
	LEFT JOIN (
		SELECT DISTINCT SUBSCR_NO, EXTERNAL_ID
			FROM EXTERNAL_ID_EQUIP_MAP
			WHERE DATE(EFFECTIVE_DT) <= CURRENT_DATE AND DATE(EXPIRY_DT) > CURRENT_DATE
			AND EXTERNAL_ID_TYPE = 1 AND IS_CURRENT = 1) EIEM
	ON RH.SUBSCR_NO = EIEM.SUBSCR_NO
WHERE DATE(RH.RECHARGE_DATE_TIME) = CURRENT_DATE-1
AND SUBSTRING(NVL(RH.RECHARGE_COMMMENT,' '),1,8) != 'inswitch' AND nvl(RHB.AMOUNT,0) < -99999
AND SUBSTRING(EIEM.EXTERNAL_ID,1,4) = '5926'
AND RHB.BALANCE_ID = 89 AND RHB.PAYMENT_MODE = 1
;

--DATA subscription
SELECT
	RSUB.APPLY_DATE AS TRANS_DT,
	EE.EXTERNAL_ID,
	RSUB.SUBSCR_NO,
	EE.ACCOUNT_NO,
	CAST(RSUB.OFFER_ID AS VARCHAR(30)) AS BILL_REF_NO,
	RSUB.TRANS_AMT,
	0 AS BILL_AMT,
	SUBSTRING(OV.DISPLAY_VALUE,1,30) AS ACTIVITY_TYPE,
	'Subscription' AS SERVICE_TYPE,
	(CASE WHEN RSUB.OFFER_ID IN (10957,10971,11001,11005,11036,11051,11052,11073,11076,11077,11078,11083) THEN 1
		WHEN RSUB.OFFER_ID IN (10958,10972,10994,11006,11023,11025,11039,11085) THEN 2
		WHEN RSUB.OFFER_ID = 11086 THEN 4
		WHEN RSUB.OFFER_ID IN (10959,10960,10973,11087,11129,11130,11131,11195,11202,11213,11219,11239,11240) THEN 8
		ELSE 0 END) * (CASE WHEN RSUB.NO_TRANS = 0 THEN 1 ELSE RSUB.NO_TRANS END) AS ENTRIES
FROM
	(SELECT
		DATE(RC.APPLY_DATE) AS APPLY_DATE,
		RC.PARENT_SUBSCR_NO SUBSCR_NO,
		RC.OFFER_ID,
		SUM(CASE WHEN RC.RC_TERM_ID = 1766 THEN 1 ELSE 0 END) AS NO_TRANS,
		SUM(RC.AMOUNT + RC.TOTAL_TAX) / 100 AS TRANS_AMT
	FROM RC
		JOIN RC_BALANCE RB
		ON RC.RC_TERM_INST_ID = RB.RC_TERM_INST_ID AND RC.BILLING_SEQUENCE_NUMBER = RB.BILLING_SEQUENCE_NUMBER
	WHERE DATE(RC.APPLY_DATE) = CURRENT_DATE-1
	AND RB.BALANCE_ID = 89 AND RB.PAYMENT_MODE = 1 --AND RC.RC_TERM_ID = 1766
	AND RC.OFFER_ID IN (10957,10971,11001,11005,11036,11051,11052,11073,11076,11077,11078,11083,
		10958,10972,10994,11006,11023,11025,11039,11085,11086,
		10959,10960,10973,11087,11129,11130,11131,11195,11202,11213,11219,11239,11240)
	GROUP BY 1,2,3
	HAVING SUM(RC.AMOUNT_PREPAID) > 0) RSUB
	JOIN OFFER_VALUES OV
	ON RSUB.OFFER_ID = OV.OFFER_ID AND OV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM OFFER_VALUES)
	JOIN EXTERNAL_ID_EQUIP_MAP EE
	ON EE.SUBSCR_NO = RSUB.SUBSCR_NO AND DATE(EE.EFFECTIVE_DT) <= CURRENT_DATE AND DATE(EE.EXPIRY_DT) > CURRENT_DATE 
	AND EE.IS_CURRENT = 1 AND EE.EXTERNAL_ID_TYPE = 1
;

--BLAZE Sign ups
SELECT
	EE.ACTIVE_DATE AS TRANS_DT,
	EE.EXTERNAL_ID,
	EE.SUBSCR_NO,
	EE.ACCOUNT_NO,
	'INVENTORY:' || EE.INVENTORY_ID AS BILL_REF_NO,
	0 AS TRANS_AMT,
	0 AS BILL_AMT,
	'BLAZE Sign-up' AS ACTIVITY_TYPE,
	'GPON' AS SERVICE_TYPE,
	2 AS ENTRIES

FROM EXTERNAL_ID_EQUIP_MAP_EXTRACT EE
WHERE DATE(EE.EXTRACT_FILE_DATE) = CURRENT_DATE
AND EE.EXTERNAL_ID_TYPE IN (37,39)
AND DATE(EE.ACTIVE_DATE) = CURRENT_DATE-1
;

--Postpaid Mobile Activations (residential)
SELECT
	ASUB.DATE_ENTER_ACTIVE AS TRANS_DT,
	EE.EXTERNAL_ID,
	EE.SUBSCR_NO,
	EE.ACCOUNT_NO,
	'PO:' || ASUB.PRIMARY_OFFER_ID AS BILL_REF_NO,
	0 AS TRANS_AMT,
	0 AS BILL_AMT,
	'New Activation' AS ACTIVITY_TYPE,
	--CASE WHEN ASUB.PAYMENT_MODE1 IS NULL THEN 'Postpaid Hybrid' ELSE 'Postpaid Mobile' END AS SERVICE_TYPE,
	'Postpaid Mobile' AS SERVICE_TYPE,
	1 AS ENTRIES

FROM EXTERNAL_ID_EQUIP_MAP_EXTRACT EE
	JOIN ACCOUNT_SUBSCRIBER_EXTRACT ASUB
	ON ASUB.ACCOUNT_NO = EE.ACCOUNT_NO AND DATE(ASUB.EXTRACT_FILE_DATE) = CURRENT_DATE
WHERE DATE(EE.EXTRACT_FILE_DATE) = CURRENT_DATE
AND EE.EXTERNAL_ID_TYPE = 1 AND EE.IS_CURRENT = 1
AND SUBSTRING(EE.EXTERNAL_ID,1,4) = '5926'
AND ASUB.ACCOUNT_CATEGORY = 10
AND NVL(ASUB.PAYMENT_MODE1,0) != 1
AND DATE(ASUB.DATE_ENTER_ACTIVE) = CURRENT_DATE-1
;

--Prepaid Mobile Activations (residential)
SELECT
	ASUB.DATE_ENTER_ACTIVE AS TRANS_DT,
	EE.EXTERNAL_ID,
	EE.SUBSCR_NO,
	EE.ACCOUNT_NO,
	'PO:' || ASUB.PRIMARY_OFFER_ID AS BILL_REF_NO,
	0 AS TRANS_AMT,
	0 AS BILL_AMT,
	'New Activation' AS ACTIVITY_TYPE,
	'Prepaid Mobile' AS SERVICE_TYPE,
	4 AS ENTRIES

FROM EXTERNAL_ID_EQUIP_MAP_EXTRACT EE
	JOIN ACCOUNT_SUBSCRIBER_EXTRACT ASUB
	ON ASUB.ACCOUNT_NO = EE.ACCOUNT_NO AND DATE(ASUB.EXTRACT_FILE_DATE) = CURRENT_DATE
WHERE DATE(EE.EXTRACT_FILE_DATE) = CURRENT_DATE
AND EE.EXTERNAL_ID_TYPE = 1 AND EE.IS_CURRENT = 1
AND SUBSTRING(ASUB.RANGE_MAP_EXTERNAL_ID,1,4) = '5926'
AND ASUB.ACCOUNT_CATEGORY = 10
AND NVL(ASUB.PAYMENT_MODE1,0) = 1
AND DATE(asub.DATE_ENTER_ACTIVE) = CURRENT_DATE-1
;
--Postpaid Roaming Usage - Christmas 2019
SELECT
	CURRENT_DATE-1 AS TRANS_DT,
	Detail.EXTERNAL_ID,
	Detail.SUBSCR_NO,
	Detail.ACCOUNT_NO,
	'N/A' AS BILL_REF_NO,
	SUM(Detail.AMOUNT) AS TRANS_AMT,
	SUM(Detail.CHARGED_AMOUNT) AS BILL_AMT,
	'Postpaid Roaming' AS ACTIVITY_TYPE,
	Detail.SERVICE_TYPE,
	SUM(Detail.CHARGED_AMOUNT) / 1000 AS TOTAL_ENTRIES,
	SUM(CASE WHEN DATE(Detail.TRANS_DT) BETWEEN ${begin_dt}::Date AND CURRENT_DATE-2 THEN Detail.CHARGED_AMOUNT ELSE 0 END) / 1000 AS PREV_ENTRIES,
	FLOOR(SUM(Detail.CHARGED_AMOUNT) / 1000) - FLOOR(SUM(CASE WHEN DATE(Detail.TRANS_DT) BETWEEN ${begin_dt}::Date AND CURRENT_DATE-2 THEN Detail.CHARGED_AMOUNT ELSE 0 END) / 1000) AS ENTRIES

FROM (SELECT
		CD.TRANS_DT,
		CD.EXTERNAL_ID,
		CD.SUBSCR_NO,
		CD.ACCOUNT_NO,
		'Postpaid Mobile' AS SERVICE_TYPE,
		CD.POINT_ORIGIN,
		CD.POINT_TARGET,
		CASE WHEN CD.APPLICATION_ID IN (7,10) THEN CD.PRIMARY_UNITS / 1048576 ELSE 0 END AS MBYTES,
		CASE WHEN CD.APPLICATION_ID = 1 THEN CD.PRIMARY_UNITS / 60 ELSE 0 END AS MINUTES,
		CASE WHEN CD.APPLICATION_ID = 2 THEN CD.PRIMARY_UNITS ELSE 0 END AS TEXTS,
		CD.PRIMARY_UNITS,
		CD.BALANCE_ID,
		CD.AMOUNT/100 AS AMOUNT,
		CD.TOTAL_TAX/100 AS TAX,
		nvl(CD.CHARGED_AMOUNT,0) / 100 AS CHARGED_AMOUNT,
		CD.APPLICATION_ID,
		CASE WHEN CD.APPLICATION_ID = 1 THEN 'Voice'
			WHEN CD.APPLICATION_ID = 2 THEN 'SMS'
			ELSE 'Data' END AS TRAN_TYPE,
		CD.AUT_ID,
		CASE WHEN length(CD.CELL_ID) > 16 THEN substring(CD.CELL_ID,1,16) ELSE CD.CELL_ID END AS CELL_ID,
		CASE WHEN length(AV.DISPLAY_VALUE) > 40 THEN substring(AV.DISPLAY_VALUE,1,40) ELSE AV.DISPLAY_VALUE END AS DISPLAY_VALUE,
		CASE WHEN CCI.COUNTRY IS NOT NULL THEN CCI.COUNTRY
			WHEN RMC.COUNTRY IS NOT NULL THEN RMC.COUNTRY
		ELSE 'Unknown' END AS COUNTRY

	FROM CDR_DATA CD
		JOIN AUT_FINAL_VALUES AV
		ON CD.AUT_ID = AV.AUT_ID AND AV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
		JOIN AUT_GROUP_MAP AGM
		ON CD.AUT_ID = AGM.AUT_ID AND AGM.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_GROUP_MAP)
		AND AGM.AUT_GROUP_ID IN (40,42,34)
		LEFT JOIN (SELECT DISTINCT CARRIER_CID,COUNTRY FROM CARRIER_CELL_IDS) CCI
		ON substring(CD.CELL_ID,1,6) = substring(CCI.CARRIER_CID,1,6)
		LEFT JOIN ROAMING_COUNTRY RMC
		ON CD.AUT_ID = RMC.AUT_ID
	WHERE DATE(CD.TRANS_DT) BETWEEN ${begin_dt} AND CURRENT_DATE-1
	AND CD.APPLICATION_ID IN (1,2,7,10) 
	AND CD.PRIMARY_UNITS > 0 
	AND CD.CHARGED_AMOUNT > 0
	AND CD.EXTERNAL_ID_TYPE = 1
	AND CD.PAYMENT_MODE != 1) Detail
GROUP BY 1,2,3,4,5,8,9
HAVING ENTRIES > 0
ORDER BY 1,2,3,4,5
;

--MMG Payments Christmas 2019
SELECT
	BMF.POST_DATE AS TRANS_DT,
	EE.EXTERNAL_ID,
	EE.SUBSCR_NO,
	BMF.ACCOUNT_NO,
	CAST(BMF.ORIG_BILL_REF_NO AS VARCHAR(30)) AS BILL_REF_NO,
	BMF.TRANS_AMOUNT/100 AS TRANS_AMT,
	CB.TOTAL_DUE/100 AS BILL_AMT,
	SUBSTRING(TSV.DISPLAY_VALUE,1,30) AS ACTIVITY_TYPE,
	CASE WHEN EE.EXTERNAL_ID_TYPE = 1 THEN 'Mobile'
		WHEN EE.EXTERNAL_ID_TYPE = 9 THEN 'Landline'
		WHEN EE.EXTERNAL_ID_TYPE = 11 THEN 'DSL'
		ELSE 'BLAZE' END AS SERVICE_TYPE,
--	CASE WHEN BMF.ORIG_BILL_REF_NO = 0 THEN FLOOR(TRANS_AMOUNT/100000)
--		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE <= BMF.TRANS_AMOUNT THEN FLOOR(BMF.TRANS_AMOUNT/100000)
--		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE > BMF.TRANS_AMOUNT THEN FLOOR(CB.TOTAL_DUE/100000) END
--			+ (CASE WHEN BMF.TRANS_SOURCE = 103 THEN 2 ELSE 0 END) AS ENTRIES
	CASE WHEN BMF.ORIG_BILL_REF_NO = 0 THEN FLOOR(TRANS_AMOUNT/100000)
		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE <= BMF.TRANS_AMOUNT THEN FLOOR(BMF.TRANS_AMOUNT/100000)
		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE > BMF.TRANS_AMOUNT THEN FLOOR(CB.TOTAL_DUE/100000) END AS ENTRIES

FROM (SELECT * FROM BMF_EXTRACT WHERE DATE(EXTRACT_FILE_DATE) = current_date) BMF
	JOIN TRANS_SOURCE_VALUES TSV
	ON BMF.TRANS_SOURCE = TSV.TRANS_SOURCE
	JOIN (SELECT ACCOUNT_NO, ACCOUNT_CATEGORY FROM CMF_EXTRACT WHERE DATE(EXTRACT_FILE_DATE) = CURRENT_DATE) CMF
	ON CMF.ACCOUNT_NO = BMF.ACCOUNT_NO AND CMF.ACCOUNT_CATEGORY = 10
	JOIN (SELECT * FROM CMF_BALANCE WHERE DATE(EFFECTIVE_DT) <= CURRENT_DATE AND DATE(EXPIRY_DT) > CURRENT_DATE) CB
	ON CB.ACCOUNT_NO = BMF.ACCOUNT_NO AND CB.BILL_REF_NO = BMF.ORIG_BILL_REF_NO 
	JOIN (SELECT ACCOUNT_NO, EXTERNAL_ID, SUBSCR_NO, EXTERNAL_ID_TYPE
		FROM EXTERNAL_ID_EQUIP_MAP E1
		WHERE E1.EXTERNAL_ID_TYPE IN (1,9,11,37)
		AND DATE(E1.EFFECTIVE_DT) <= CURRENT_DATE AND DATE(E1.EXPIRY_DT) > CURRENT_DATE
		AND E1.IS_CURRENT = 1
		AND ACCOUNT_NO IN (SELECT ACCOUNT_NO
		FROM EXTERNAL_ID_EQUIP_MAP E2
		WHERE E2.EXTERNAL_ID_TYPE IN (1,9,11,37)
		AND DATE(E2.EFFECTIVE_DT) <= CURRENT_DATE AND DATE(E2.EXPIRY_DT) > CURRENT_DATE
		AND E2.IS_CURRENT = 1
		GROUP BY E2.ACCOUNT_NO
		HAVING COUNT(DISTINCT E2.EXTERNAL_ID) = 1)) EE
	ON BMF.ACCOUNT_NO = EE.ACCOUNT_NO
WHERE DATE(TRANS_DATE) > '20190801' AND DATE(POST_DATE) = CURRENT_DATE - 1
AND BMF.NO_BILL = 0 AND BMF.TRANS_AMOUNT > 99999
AND BMF.BMF_TRANS_TYPE NOT IN (16,51,52,53,80,90)
AND CB.BALANCE_DUE <= 0
AND BMF.TRANS_SOURCE = 103
AND NOT (CB.CLOSED_DATE IS NOT NULL AND CB.CLOSED_DATE > CB.PPDD_DATE)
;

-- MyGTT Payments
SELECT
	BMF.POST_DATE AS TRANS_DT,
	EE.EXTERNAL_ID,
	EE.SUBSCR_NO,
	BMF.ACCOUNT_NO,
	CAST(BMF.ORIG_BILL_REF_NO AS VARCHAR(30)) AS BILL_REF_NO,
	BMF.TRANS_AMOUNT/100 AS TRANS_AMT,
	CB.TOTAL_DUE/100 AS BILL_AMT,
	SUBSTRING(TSV.DISPLAY_VALUE,1,30) AS ACTIVITY_TYPE,
	CASE WHEN EE.EXTERNAL_ID_TYPE = 1 THEN 'Mobile'
		WHEN EE.EXTERNAL_ID_TYPE = 9 THEN 'Landline'
		WHEN EE.EXTERNAL_ID_TYPE = 11 THEN 'DSL'
		ELSE 'BLAZE' END AS SERVICE_TYPE,
--	CASE WHEN BMF.ORIG_BILL_REF_NO = 0 THEN FLOOR(TRANS_AMOUNT/100000)
--		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE <= BMF.TRANS_AMOUNT THEN FLOOR(BMF.TRANS_AMOUNT/100000)
--		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE > BMF.TRANS_AMOUNT THEN FLOOR(CB.TOTAL_DUE/100000) END
--			+ (CASE WHEN BMF.TRANS_SOURCE = 103 THEN 2 ELSE 0 END) AS ENTRIES
	CASE WHEN BMF.ORIG_BILL_REF_NO = 0 THEN FLOOR(TRANS_AMOUNT/100000)
		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE <= BMF.TRANS_AMOUNT THEN FLOOR(BMF.TRANS_AMOUNT/100000)
		WHEN CLOSED_DATE IS NOT NULL AND CLOSED_DATE <= PPDD_DATE AND CB.TOTAL_DUE > BMF.TRANS_AMOUNT THEN FLOOR(CB.TOTAL_DUE/100000) END AS ENTRIES

FROM (SELECT * FROM BMF_EXTRACT WHERE DATE(EXTRACT_FILE_DATE) = current_date) BMF
	JOIN TRANS_SOURCE_VALUES TSV
	ON BMF.TRANS_SOURCE = TSV.TRANS_SOURCE
	JOIN (SELECT ACCOUNT_NO, ACCOUNT_CATEGORY FROM CMF_EXTRACT WHERE DATE(EXTRACT_FILE_DATE) = CURRENT_DATE) CMF
	ON CMF.ACCOUNT_NO = BMF.ACCOUNT_NO AND CMF.ACCOUNT_CATEGORY = 10
	JOIN (SELECT * FROM CMF_BALANCE WHERE DATE(EFFECTIVE_DT) <= CURRENT_DATE AND DATE(EXPIRY_DT) > CURRENT_DATE) CB
	ON CB.ACCOUNT_NO = BMF.ACCOUNT_NO AND CB.BILL_REF_NO = BMF.ORIG_BILL_REF_NO 
	JOIN (SELECT ACCOUNT_NO, EXTERNAL_ID, SUBSCR_NO, EXTERNAL_ID_TYPE
		FROM EXTERNAL_ID_EQUIP_MAP E1
		WHERE E1.EXTERNAL_ID_TYPE IN (1,9,11,37)
		AND DATE(E1.EFFECTIVE_DT) <= CURRENT_DATE AND DATE(E1.EXPIRY_DT) > CURRENT_DATE
		AND E1.IS_CURRENT = 1
		AND ACCOUNT_NO IN (SELECT ACCOUNT_NO
		FROM EXTERNAL_ID_EQUIP_MAP E2
		WHERE E2.EXTERNAL_ID_TYPE IN (1,9,11,37)
		AND DATE(E2.EFFECTIVE_DT) <= CURRENT_DATE AND DATE(E2.EXPIRY_DT) > CURRENT_DATE
		AND E2.IS_CURRENT = 1
		GROUP BY E2.ACCOUNT_NO
		HAVING COUNT(DISTINCT E2.EXTERNAL_ID) = 1)) EE
	ON BMF.ACCOUNT_NO = EE.ACCOUNT_NO
WHERE DATE(TRANS_DATE) > '20190801' AND DATE(POST_DATE) = CURRENT_DATE - 1
AND BMF.NO_BILL = 0 AND BMF.TRANS_AMOUNT > 99999
AND BMF.BMF_TRANS_TYPE NOT IN (16,51,52,53,80,90)
AND CB.BALANCE_DUE <= 0
AND BMF.TRANS_SOURCE = 108	--MyGTT
AND NOT (CB.CLOSED_DATE IS NOT NULL AND CB.CLOSED_DATE > CB.PPDD_DATE)
;

--Handset Purchases - Christmas 2019
SELECT
	AMS.DATE_SOLD AS TRANS_DT,
	AMS.CONTRACT_NUMBER AS EXTERNAL_ID,
	EE.SUBSCR_NO,
	EE.ACCOUNT_NO,
	CAST(AMS.INV_NUMBER AS VARCHAR(30)) AS BILL_REF_NO,
	LINE_TOTAL AS TRANS_AMT,
	LINE_TOTAL_COST AS BILL_AMT,
	SUBSTRING(NVL(AMS.TRANS_TYPE_UNFILTERED,' '),1,30) AS ACTIVITY_TYPE,
	'Handset' AS SERVICE_TYPE,
	FLOOR((AMS.LINE_TOTAL + 1) / 5000) AS ENTRIES
FROM ALL_MMS_SALES AMS
	JOIN (SELECT DISTINCT EXTERNAL_ID,EXTERNAL_ID_TYPE,SUBSCR_NO,ACCOUNT_NO 
			FROM EXTERNAL_ID_EQUIP_MAP_EXTRACT 
			WHERE DATE(EXTRACT_FILE_DATE) = CURRENT_DATE
			AND IS_CURRENT = 1 AND EXTERNAL_ID_TYPE IN (1,9) AND EXTERNAL_ID != '5922251315') EE
	ON AMS.CONTRACT_NUMBER = EE.EXTERNAL_ID
WHERE DATE(DATE_SOLD) = CURRENT_DATE-1
AND AMS.TRANSACTION_TYPE = 'PHONE SALE'
;
