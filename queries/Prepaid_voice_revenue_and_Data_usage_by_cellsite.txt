--Prepaid Voice Revenue and DATA usage (Prepaid/Postpaid & LTE) by Cell Site
SELECT
	TO_CHAR(Detail.TRANS_DT,'YYYY-MM') AS MONTH_ID,
	--TO_CHAR(Detail.TRANS_DT,'YYYY-MM-DD') AS TRANS_DT,
	CASE WHEN CELL_SITE IS NULL THEN 'Unknown' ELSE CELL_SITE END AS CELL_SITE,
	CATEGORY,
	CALL_TYPE,
	SUM(Detail.CALL_COUNT) AS CALLS,
	COUNT(DISTINCT CASE WHEN CALL_TYPE != 'Data Up/Downlink' THEN EXTERNAL_ID END) AS SUBS,
	SUM(CASE WHEN CALL_TYPE != 'Data Up/Downlink' THEN PRIMARY_UNITS ELSE 0 END) / 60 AS ACTUAL_MINUTES,
	CASE WHEN CALL_TYPE IN ('International','Roaming','Voicemail') THEN SUM(CEIL(PRIMARY_UNITS/60))
		WHEN CALL_TYPE = 'Data Up/Downlink' THEN 0
		ELSE SUM(PRIMARY_UNITS/60) END AS BILLED_MINUTES,
	SUM(CASE WHEN BALANCE_ID = 89 THEN (CHARGED_AMOUNT_PREPAID - TAX_PREPAID) / 100 ELSE 0 END) AS REVENUE,
	SUM(CASE WHEN BALANCE_ID = 89 THEN TAX_PREPAID / 100 ELSE 0 END) AS TAX_AMOUNT,
	SUM(CHARGED_AMOUNT_PREPAID) / 100 AS CHARGED_AMOUNT,
	SUM(CASE WHEN BALANCE_ID = 89 THEN (CHARGED_AMOUNT_PREPAID - TAX_PREPAID) / 100 ELSE 0 END) / 210 AS REV_IN_USD,
	SUM(CASE WHEN BALANCE_ID != 89 AND UNIT_TYPE = 1 THEN CHARGED_AMOUNT_PREPAID / 100 ELSE 0 END) AS PROMO,
	SUM(CASE WHEN BALANCE_ID != 89 AND UNIT_TYPE = 2 THEN PRIMARY_UNITS / 60 ELSE 0 END) AS FREE_MINUTES,
	--SUM(CASE WHEN BALANCE_ID = 111 AND UNIT_TYPE = 3 THEN PRIMARY_UNITS ELSE 0 END) AS DATA_MBytes
	SUM(CASE WHEN UNIT_TYPE = 3 THEN PRIMARY_UNITS ELSE 0 END) AS DATA_MBytes
FROM
(SELECT 'C' AS TABLE_ID,
	CD.TRANS_DT,
	CD.EXTERNAL_ID,
	1 AS CALL_COUNT,
	CD.POINT_ORIGIN,
	CD.POINT_TARGET,
	CD.PRIMARY_UNITS,
	NVL(CD.CHARGED_AMOUNT_PREPAID,0) AS CHARGED_AMOUNT_PREPAID,
	NVL(CD.AMOUNT_PREPAID,0) AS AMOUNT_PREPAID,
	NVL(CD.TOTAL_TAX_PREPAID,0) AS TAX_PREPAID,
	NVL(CD.TOTAL_DISCOUNT_AMT_PREPAID,0) AS DISC_AMT_PREPAID,
	CD.BALANCE_ID,
	BF.UNIT_TYPE,
	CD.AUT_ID,
	AFV.DISPLAY_VALUE,
	AFV.DESCRIPTION,
	CASE WHEN (UPPER(AFV.DISPLAY_VALUE) LIKE '%ROAM%' OR substring(CD.CELL_ID,1,3) != '738') THEN 'Roaming'
		WHEN ((CD.AUT_ID BETWEEN 1646 AND 1797) OR (CD.AUT_ID BETWEEN 1810 AND 1905) OR (CD.AUT_ID IN (4959,4680,4681,5043,5047,5068))) THEN 'International'
		WHEN (substring(CD.POINT_TARGET,1,6) BETWEEN '592609' AND '592629') OR (substring(CD.POINT_TARGET,1,6) 
			BETWEEN '592638' AND '592658') THEN 'GTT_Cell' 
		WHEN ((substring(CD.POINT_TARGET,1,3) = '592' AND substring(CD.POINT_TARGET,1,4) != '5926' 
			AND length(CD.POINT_TARGET) >= 10) OR (substring(CD.POINT_TARGET,1,3) = '093' OR CD.POINT_TARGET = '18007442225')) THEN 'GTT_Land'
		WHEN (substring(CD.POINT_TARGET,1,6) BETWEEN '592600' AND '592604') 
			OR (substring(CD.POINT_TARGET,1,6) IN ('592608','592630','592633')) 
			OR (substring(CD.POINT_TARGET,1,6) BETWEEN '592659' AND '592699') THEN 'Digicell'
		ELSE AFV.DESCRIPTION END AS CALL_TYPE,
	CD.CELL_ID,
	GCS.DESCRIPTION AS CELL_SITE,
	GCS.CATEGORY AS CATEGORY
FROM CDR_DATA CD
	JOIN AUT_FINAL_VALUES AFV
	ON CD.AUT_ID = AFV.AUT_ID AND AFV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
	LEFT JOIN BALANCE_REF BF
	ON CD.BALANCE_ID = BF.BALANCE_ID AND BF.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM BALANCE_REF)
	LEFT OUTER JOIN GSM_CELL_SITES GCS
	ON CD.CELL_ID = GCS.CELL_ID
WHERE CD.APPLICATION_ID = 1 AND CD.EXTERNAL_ID_TYPE = 1 AND CD.PRIMARY_UNITS > 0 AND CD.BALANCE_ID IS NOT NULL 
AND CD.PAYMENT_MODE = 1 AND substring(CD.CELL_ID,1,6) = '738002'
AND (CD.EXTERNAL_ID = CD.POINT_ORIGIN OR (CD.EXTERNAL_ID != CD.POINT_ORIGIN AND CD.AMOUNT > 0) 
OR (CD.EXTERNAL_ID = CD.POINT_TARGET))
AND DATE(CD.TRANS_DT) BETWEEN ${begin_dt} AND ${end_dt}
UNION ALL
SELECT 'B' AS TABLE_ID,
	CD.TRANS_DT,
	CD.EXTERNAL_ID,
	CASE WHEN CB.BALANCE_COUNTER = 1 THEN 0 ELSE 1 END AS CALL_COUNT,
	CD.POINT_ORIGIN,
	CD.POINT_TARGET,
	CD.PRIMARY_UNITS,
	NVL(CB.BALANCE_AMOUNT,0) AS CHARGED_AMOUNT_PREPAID,
	CASE WHEN NVL(CD.TOTAL_TAX_PREPAID,0) > 0 THEN ROUND(CB.BALANCE_AMOUNT / 1.14,0) ELSE CB.BALANCE_AMOUNT END AS AMOUNT_PREPAID,
	CASE WHEN nvl(CD.TOTAL_TAX_PREPAID,0) > 0 THEN ROUND((CB.BALANCE_AMOUNT - (CB.BALANCE_AMOUNT / 1.14)),0) ELSE 0 END AS TAX_PREPAID,
	0 AS DISC_AMT_PREPAID,
	CB.BALANCE_ID,
	CB.UNIT_TYPE,
	CD.AUT_ID,
	AFV.DISPLAY_VALUE,
	AFV.DESCRIPTION,
	CASE WHEN (UPPER(AFV.DISPLAY_VALUE) LIKE '%ROAM%' OR substring(CD.CELL_ID,1,3) != '738') THEN 'Roaming'
		WHEN ((CD.AUT_ID BETWEEN 1646 AND 1797) OR (CD.AUT_ID BETWEEN 1810 AND 1905) OR (CD.AUT_ID IN (4959,4680,4681,5043,5047,5068))) THEN 'International'
		WHEN (substring(CD.POINT_TARGET,1,6) BETWEEN '592609' AND '592629') OR (substring(CD.POINT_TARGET,1,6) 
			BETWEEN '592638' AND '592658') THEN 'GTT_Cell' 
		WHEN ((substring(CD.POINT_TARGET,1,3) = '592' AND substring(CD.POINT_TARGET,1,4) != '5926' 
			AND length(CD.POINT_TARGET) >= 10) OR (substring(CD.POINT_TARGET,1,3) = '093' OR CD.POINT_TARGET = '18007442225')) THEN 'GTT_Land'
		WHEN (substring(CD.POINT_TARGET,1,6) BETWEEN '592600' AND '592604') 
			OR (substring(CD.POINT_TARGET,1,6) IN ('592608','592630','592633')) 
			OR (substring(CD.POINT_TARGET,1,6) BETWEEN '592659' AND '592699') THEN 'Digicell'
		ELSE AFV.DESCRIPTION END AS CALL_TYPE,
	CD.CELL_ID,
	GCS.DESCRIPTION AS CELL_SITE,
	GCS.CATEGORY AS CATEGORY
FROM CDR_DATA CD
	JOIN CDR_BALANCE CB
	ON CD.MSG_ID = CB.MSG_ID AND CD.MSG_ID2 = CB.MSG_ID2
	JOIN AUT_FINAL_VALUES AFV
	ON CD.AUT_ID = AFV.AUT_ID AND AFV.RESELLER_VERSION_ID = (SELECT MAX(RESELLER_VERSION_ID) FROM AUT_FINAL_VALUES)
	LEFT OUTER JOIN GSM_CELL_SITES GCS
	ON CD.CELL_ID = GCS.CELL_ID
WHERE CD.APPLICATION_ID = 1 AND CD.EXTERNAL_ID_TYPE = 1 
AND (CD.EXTERNAL_ID = CD.POINT_ORIGIN OR (CD.EXTERNAL_ID != CD.POINT_ORIGIN AND CD.AMOUNT > 0))
AND CD.PRIMARY_UNITS > 0 AND CD.BALANCE_COUNT > 1 AND CB.PAYMENT_MODE = 1 AND substring(CD.CELL_ID,1,6) = '738002'
AND DATE(CD.TRANS_DT) BETWEEN ${begin_dt} AND ${end_dt}
UNION ALL
SELECT 'D' AS TABLE_ID,
	GHD.DATE_HR AS TRANS_DT,
	'123' AS EXTERNAL_ID,
	0 AS CALL_COUNT,
	NULL AS POINT_ORIGIN,
	NULL AS POINT_TARGET,
	NVL(GHD.MB_DOWNLINK,0) + NVL(GHD.MB_UPLINK,0) AS PRIMARY_UNITS,
	0 AS CHARGED_AMOUNT_PREPAID,
	0 AS AMOUNT_PREPAID,
	0 AS TAX_PREPAID,
	0 AS DISC_AMT_PREPAID,
	111 AS BALANCE_ID,
	3 AS UNIT_TYPE,
	0 AUT_ID,
	NULL AS DISPLAY_VALUE,
	NULL AS DESCRIPTION,
	'Data Up/Downlink' AS CALL_TYPE,
	NULL AS CELL_ID,
	CASE WHEN CS.DESCRIPTION IS NULL THEN 'Unknown' ELSE CS.DESCRIPTION END AS CELL_SITE,
	CS.CATEGORY
FROM GPRS_HOURLY_DATA GHD
	JOIN CELL_SITES CS
	ON GHD.BSC_SECTOR = CS.REFERENCE
WHERE DATE(GHD.DATE_HR) BETWEEN ${begin_dt} AND ${end_dt}) Detail
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4
;
